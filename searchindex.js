Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[152, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[152, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[154, "adding-your-own-model"]], "Adding custom Labels": [[148, "adding-custom-labels"]], "Adding custom truth labels": [[149, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[149, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[149, "appendix"]], "Choosing a subset of events using selection": [[148, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[146, "code-quality"]], "Combining Multiple Datasets": [[148, "combining-multiple-datasets"], [149, "combining-multiple-datasets"]], "Contents": [[149, "contents"]], "Contributing To GraphNeTgraphnet": [[146, null]], "Conventions": [[146, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[149, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[149, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[147, null]], "DataConverter": [[147, "dataconverter"]], "Dataset": [[148, "dataset"]], "Datasets In GraphNeTgraphnet": [[148, null]], "Example DataConfig": [[149, "example-dataconfig"]], "Example ModelConfig": [[149, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[152, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[154, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[154, "experiment-tracking"]], "Extractors": [[147, "extractors"]], "GitHub issues": [[146, "github-issues"]], "GraphDefinition, backbone & Task": [[154, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[149, null]], "GraphNeTgraphnet": [[150, null], [153, null]], "Implementing a new Dataset": [[148, "implementing-a-new-dataset"]], "Installation": [[151, null]], "Installation in CVMFS (IceCube)": [[151, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[154, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[152, null]], "Introduction": [[149, "introduction"]], "Model.save": [[154, "model-save"]], "ModelConfig and state_dict": [[154, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[154, null]], "Overview of GraphNeT": [[149, "overview-of-graphnet"]], "Pull requests": [[146, "pull-requests"]], "Quick Start": [[151, "quick-start"]], "RNN_tito": [[93, null]], "Readers": [[147, "readers"]], "SQLiteDataset & ParquetDataset": [[148, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[148, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[154, "saving-loading-and-checkpointing-models"]], "The Model class": [[149, "the-model-class"], [154, "the-model-class"]], "The StandardModel class": [[149, "the-standardmodel-class"], [154, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[154, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[154, "using-checkpoints"]], "Writers": [[147, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[152, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[131, null]], "base_config": [[133, null]], "callbacks": [[125, null]], "classification": [[118, null]], "cleaning_module": [[75, null]], "coarsening": [[81, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[82, null]], "config": [[132, null]], "configurable": [[134, null]], "constants": [[2, null], [4, null]], "convnet": [[94, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[47, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[135, null]], "datasets": [[65, null]], "decorators": [[139, null]], "deployer": [[70, null]], "deployment": [[69, null]], "deployment_module": [[71, null]], "deprecated_methods": [[45, null], [55, null], [73, null]], "deprecation_tools": [[140, null]], "detector": [[86, null], [87, null]], "dynedge": [[95, null]], "dynedge_jinst": [[96, null]], "dynedge_kaggle_tito": [[97, null]], "easy_model": [[91, null]], "edges": [[103, null], [104, null]], "embedding": [[83, null]], "exceptions": [[78, null], [79, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[141, null]], "frames": [[35, null]], "gnn": [[92, null], [98, null]], "graph_definition": [[106, null]], "graphnet_file_reader": [[49, null]], "graphnet_writer": [[62, null]], "graphs": [[102, null], [107, null]], "grit": [[99, null]], "h5_extractor": [[41, null]], "i3_filters": [[36, null]], "i3deployer": [[76, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[72, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[50, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [74, null], [88, null]], "icemix": [[100, null]], "imports": [[142, null]], "inference_module": [[77, null]], "internal": [[38, null]], "internal_parquet_reader": [[51, null]], "iseecube": [[122, null]], "labels": [[126, null]], "layers": [[84, null]], "liquido": [[40, null], [89, null]], "liquido_reader": [[52, null]], "logging": [[143, null]], "loss_functions": [[127, null]], "maths": [[144, null]], "minkowski": [[105, null]], "model": [[111, null]], "model_config": [[136, null]], "models": [[80, null]], "node_rnn": [[114, null]], "nodes": [[108, null], [109, null]], "normalizing_flow": [[112, null]], "parquet": [[12, null], [44, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[57, null]], "parquet_writer": [[63, null]], "parsing": [[137, null]], "particlenet": [[101, null]], "pool": [[85, null]], "pre_configured": [[46, null]], "prometheus": [[42, null], [90, null]], "prometheus_datasets": [[66, null]], "prometheus_extractor": [[43, null]], "prometheus_reader": [[53, null]], "random": [[58, null]], "readers": [[48, null]], "reconstruction": [[119, null]], "rnn": [[113, null]], "samplers": [[14, null]], "snowstorm_dataset": [[67, null]], "sqlite": [[15, null], [54, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[59, null]], "sqlite_writer": [[64, null]], "src": [[145, null]], "standard_averaged_model": [[115, null]], "standard_model": [[116, null]], "string_selection_resolver": [[60, null]], "task": [[117, null], [120, null]], "test_dataset": [[68, null]], "training": [[124, null]], "training_config": [[138, null]], "transformer": [[121, null]], "types": [[37, null]], "utilities": [[33, null], [56, null], [130, null]], "utils": [[110, null], [123, null], [128, null]], "weight_fitting": [[129, null]], "writers": [[61, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.snowstorm_dataset", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.snowstorm_dataset.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_charge_threshold_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.add_full_rrwp", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "add_mean() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.graphs.utils.cluster_and_pad method)": [[110, "graphnet.models.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[131, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[136, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[133, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[136, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[127, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[133, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[118, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[118, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[129, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "chunk_sizes (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset property)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.chunk_sizes", false]], "chunks (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.chunks", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[136, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[114, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[128, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[79, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[116, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[120, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[120, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[105, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[134, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[134, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[131, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[94, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "data_source (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.data_source", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[138, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[100, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[119, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[120, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[120, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[120, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[119, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[120, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[120, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[70, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[71, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[87, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[126, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[133, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[95, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[96, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[97, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[138, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[91, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[104, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[107, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[144, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[104, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[84, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[87, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[88, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[88, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[89, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[90, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[90, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[90, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[90, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[90, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[143, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[143, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[50, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[141, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[138, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[129, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[81, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[83, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[83, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[83, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[83, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[83, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[83, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[83, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[83, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[84, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[84, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[84, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[84, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[84, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[84, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[84, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[84, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[84, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[84, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[87, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[94, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[95, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[96, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[97, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[98, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[99, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[100, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[101, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[93, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[104, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[106, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrrwp method)": [[107, "graphnet.models.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrwse method)": [[107, "graphnet.models.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[109, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[112, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[114, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[116, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[120, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[120, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[122, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[127, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[127, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[111, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[134, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gather_len_matched_buckets() (in module graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.gather_len_matched_buckets", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[87, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[88, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[89, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[90, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[90, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[90, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[90, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[133, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[125, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[98, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[106, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.samplers": [[14, "module-graphnet.data.dataset.samplers", false]], "graphnet.data.dataset.sqlite": [[15, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[40, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[41, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[42, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[44, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[45, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[46, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[47, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[48, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[49, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[50, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[51, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[52, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[53, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[54, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[55, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[56, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[57, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[58, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[59, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[60, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[61, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[62, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[63, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[64, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[65, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[66, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.snowstorm_dataset": [[67, "module-graphnet.datasets.snowstorm_dataset", false]], "graphnet.datasets.test_dataset": [[68, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[69, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[70, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[71, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[72, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[73, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[74, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[75, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[76, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[77, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[78, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[79, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[80, "module-graphnet.models", false]], "graphnet.models.coarsening": [[81, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[82, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[83, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[84, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[85, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[86, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[87, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[88, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[89, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[90, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[91, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[92, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[94, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[95, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[96, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[97, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[98, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[99, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[100, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[101, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[93, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[102, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[103, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[104, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[105, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[106, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[107, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[108, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[109, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[110, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[111, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[112, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[113, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[114, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[115, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[116, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[117, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[118, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[119, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[120, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[121, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[122, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[123, "module-graphnet.models.utils", false]], "graphnet.training": [[124, "module-graphnet.training", false]], "graphnet.training.callbacks": [[125, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[126, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[127, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[128, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[129, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[130, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[131, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[132, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[133, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[134, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[135, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[136, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[137, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[138, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[139, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[140, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[141, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[142, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[143, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[144, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[125, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[73, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "grit (class in graphnet.models.gnn.grit)": [[99, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[143, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[141, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[142, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[142, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[142, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[76, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[77, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[75, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[50, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[88, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[88, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubehosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[109, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[120, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[120, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[141, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[141, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[122, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[126, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[123, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.graphs.edges.edges)": [[104, "graphnet.models.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[104, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[107, "graphnet.models.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.graphs.graphs)": [[107, "graphnet.models.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.graphs.graphs)": [[107, "graphnet.models.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[126, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[120, "graphnet.models.task.task.LearnedTask", false]], "lenmatchbatchsampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.LenMatchBatchSampler", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[110, "graphnet.models.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[89, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[111, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[133, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[127, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[127, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[127, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[143, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.MAELoss", false]], "make_dataloader() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[105, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[111, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[133, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[136, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[138, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[136, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[136, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[136, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.samplers", false], [15, "module-graphnet.data.dataset.sqlite", false], [16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [40, "module-graphnet.data.extractors.liquido", false], [41, "module-graphnet.data.extractors.liquido.h5_extractor", false], [42, "module-graphnet.data.extractors.prometheus", false], [43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [44, "module-graphnet.data.parquet", false], [45, "module-graphnet.data.parquet.deprecated_methods", false], [46, "module-graphnet.data.pre_configured", false], [47, "module-graphnet.data.pre_configured.dataconverters", false], [48, "module-graphnet.data.readers", false], [49, "module-graphnet.data.readers.graphnet_file_reader", false], [50, "module-graphnet.data.readers.i3reader", false], [51, "module-graphnet.data.readers.internal_parquet_reader", false], [52, "module-graphnet.data.readers.liquido_reader", false], [53, "module-graphnet.data.readers.prometheus_reader", false], [54, "module-graphnet.data.sqlite", false], [55, "module-graphnet.data.sqlite.deprecated_methods", false], [56, "module-graphnet.data.utilities", false], [57, "module-graphnet.data.utilities.parquet_to_sqlite", false], [58, "module-graphnet.data.utilities.random", false], [59, "module-graphnet.data.utilities.sqlite_utilities", false], [60, "module-graphnet.data.utilities.string_selection_resolver", false], [61, "module-graphnet.data.writers", false], [62, "module-graphnet.data.writers.graphnet_writer", false], [63, "module-graphnet.data.writers.parquet_writer", false], [64, "module-graphnet.data.writers.sqlite_writer", false], [65, "module-graphnet.datasets", false], [66, "module-graphnet.datasets.prometheus_datasets", false], [67, "module-graphnet.datasets.snowstorm_dataset", false], [68, "module-graphnet.datasets.test_dataset", false], [69, "module-graphnet.deployment", false], [70, "module-graphnet.deployment.deployer", false], [71, "module-graphnet.deployment.deployment_module", false], [72, "module-graphnet.deployment.i3modules", false], [73, "module-graphnet.deployment.i3modules.deprecated_methods", false], [74, "module-graphnet.deployment.icecube", false], [75, "module-graphnet.deployment.icecube.cleaning_module", false], [76, "module-graphnet.deployment.icecube.i3deployer", false], [77, "module-graphnet.deployment.icecube.inference_module", false], [78, "module-graphnet.exceptions", false], [79, "module-graphnet.exceptions.exceptions", false], [80, "module-graphnet.models", false], [81, "module-graphnet.models.coarsening", false], [82, "module-graphnet.models.components", false], [83, "module-graphnet.models.components.embedding", false], [84, "module-graphnet.models.components.layers", false], [85, "module-graphnet.models.components.pool", false], [86, "module-graphnet.models.detector", false], [87, "module-graphnet.models.detector.detector", false], [88, "module-graphnet.models.detector.icecube", false], [89, "module-graphnet.models.detector.liquido", false], [90, "module-graphnet.models.detector.prometheus", false], [91, "module-graphnet.models.easy_model", false], [92, "module-graphnet.models.gnn", false], [93, "module-graphnet.models.gnn.RNN_tito", false], [94, "module-graphnet.models.gnn.convnet", false], [95, "module-graphnet.models.gnn.dynedge", false], [96, "module-graphnet.models.gnn.dynedge_jinst", false], [97, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [98, "module-graphnet.models.gnn.gnn", false], [99, "module-graphnet.models.gnn.grit", false], [100, "module-graphnet.models.gnn.icemix", false], [101, "module-graphnet.models.gnn.particlenet", false], [102, "module-graphnet.models.graphs", false], [103, "module-graphnet.models.graphs.edges", false], [104, "module-graphnet.models.graphs.edges.edges", false], [105, "module-graphnet.models.graphs.edges.minkowski", false], [106, "module-graphnet.models.graphs.graph_definition", false], [107, "module-graphnet.models.graphs.graphs", false], [108, "module-graphnet.models.graphs.nodes", false], [109, "module-graphnet.models.graphs.nodes.nodes", false], [110, "module-graphnet.models.graphs.utils", false], [111, "module-graphnet.models.model", false], [112, "module-graphnet.models.normalizing_flow", false], [113, "module-graphnet.models.rnn", false], [114, "module-graphnet.models.rnn.node_rnn", false], [115, "module-graphnet.models.standard_averaged_model", false], [116, "module-graphnet.models.standard_model", false], [117, "module-graphnet.models.task", false], [118, "module-graphnet.models.task.classification", false], [119, "module-graphnet.models.task.reconstruction", false], [120, "module-graphnet.models.task.task", false], [121, "module-graphnet.models.transformer", false], [122, "module-graphnet.models.transformer.iseecube", false], [123, "module-graphnet.models.utils", false], [124, "module-graphnet.training", false], [125, "module-graphnet.training.callbacks", false], [126, "module-graphnet.training.labels", false], [127, "module-graphnet.training.loss_functions", false], [128, "module-graphnet.training.utils", false], [129, "module-graphnet.training.weight_fitting", false], [130, "module-graphnet.utilities", false], [131, "module-graphnet.utilities.argparse", false], [132, "module-graphnet.utilities.config", false], [133, "module-graphnet.utilities.config.base_config", false], [134, "module-graphnet.utilities.config.configurable", false], [135, "module-graphnet.utilities.config.dataset_config", false], [136, "module-graphnet.utilities.config.model_config", false], [137, "module-graphnet.utilities.config.parsing", false], [138, "module-graphnet.utilities.config.training_config", false], [139, "module-graphnet.utilities.decorators", false], [140, "module-graphnet.utilities.deprecation_tools", false], [141, "module-graphnet.utilities.filesys", false], [142, "module-graphnet.utilities.imports", false], [143, "module-graphnet.utilities.logging", false], [144, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[118, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[98, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[118, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[119, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[119, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[119, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[120, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[120, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[120, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[120, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[120, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[98, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[109, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[143, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[100, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[114, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[109, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[109, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[109, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[112, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "num_samples (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.num_samples", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[125, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[125, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[125, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[125, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[131, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[58, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[45, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[101, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[109, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[125, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[131, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[91, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.icecubehosteddataset method)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[125, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[104, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "randomchunksampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[81, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[140, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[143, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[142, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[93, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[70, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[134, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[135, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[136, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[128, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[88, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[89, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[90, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[90, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[90, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[90, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[87, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[87, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[109, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[109, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[111, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[125, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[112, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[116, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "snowstorm (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.SNOWSTORM", false]], "snowstorm (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.SNOWSTORM", false]], "snowstormdataset (class in graphnet.datasets.snowstorm_dataset)": [[67, "graphnet.datasets.snowstorm_dataset.SnowStormDataset", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[55, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[131, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[120, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[120, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[116, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[143, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[88, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[89, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[90, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[90, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[90, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[90, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[87, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[138, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[91, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[120, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[68, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[126, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[120, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[138, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[137, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[135, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[129, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[112, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[116, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[91, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[115, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[111, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[127, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[143, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[90, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[129, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[131, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[88, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[88, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[88, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[89, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[90, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[90, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[90, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[90, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[90, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[90, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[90, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[90, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[90, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[119, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [65, 0, 0, "-", "datasets"], [69, 0, 0, "-", "deployment"], [78, 0, 0, "-", "exceptions"], [80, 0, 0, "-", "models"], [124, 0, 0, "-", "training"], [130, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [17, 0, 0, "-", "extractors"], [44, 0, 0, "-", "parquet"], [46, 0, 0, "-", "pre_configured"], [48, 0, 0, "-", "readers"], [54, 0, 0, "-", "sqlite"], [56, 0, 0, "-", "utilities"], [61, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"], [5, 1, 1, "", "IceCubeHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.curated_datamodule.IceCubeHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "samplers"], [15, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 3, 1, "", "chunk_sizes"], [13, 4, 1, "", "query_table"]], "graphnet.data.dataset.samplers": [[14, 1, 1, "", "LenMatchBatchSampler"], [14, 1, 1, "", "RandomChunkSampler"], [14, 5, 1, "", "gather_len_matched_buckets"]], "graphnet.data.dataset.samplers.RandomChunkSampler": [[14, 3, 1, "", "chunks"], [14, 3, 1, "", "data_source"], [14, 3, 1, "", "num_samples"]], "graphnet.data.dataset.sqlite": [[16, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[16, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [40, 0, 0, "-", "liquido"], [42, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[41, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[41, 1, 1, "", "H5Extractor"], [41, 1, 1, "", "H5HitExtractor"], [41, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[43, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, 1, 1, "", "PrometheusExtractor"], [43, 1, 1, "", "PrometheusFeatureExtractor"], [43, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[45, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[45, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[47, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[47, 1, 1, "", "I3ToParquetConverter"], [47, 1, 1, "", "I3ToSQLiteConverter"], [47, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[49, 0, 0, "-", "graphnet_file_reader"], [50, 0, 0, "-", "i3reader"], [51, 0, 0, "-", "internal_parquet_reader"], [52, 0, 0, "-", "liquido_reader"], [53, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[49, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[49, 3, 1, "", "accepted_extractors"], [49, 3, 1, "", "accepted_file_extensions"], [49, 3, 1, "", "extracor_names"], [49, 4, 1, "", "find_files"], [49, 4, 1, "", "set_extractors"], [49, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[50, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[51, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[52, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[53, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[53, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[55, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[55, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[57, 0, 0, "-", "parquet_to_sqlite"], [58, 0, 0, "-", "random"], [59, 0, 0, "-", "sqlite_utilities"], [60, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[58, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[59, 5, 1, "", "attach_index"], [59, 5, 1, "", "create_table"], [59, 5, 1, "", "create_table_and_save_to_sql"], [59, 5, 1, "", "database_exists"], [59, 5, 1, "", "database_table_exists"], [59, 5, 1, "", "get_primary_keys"], [59, 5, 1, "", "query_database"], [59, 5, 1, "", "run_sql_code"], [59, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[60, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[60, 4, 1, "", "resolve"]], "graphnet.data.writers": [[62, 0, 0, "-", "graphnet_writer"], [63, 0, 0, "-", "parquet_writer"], [64, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[62, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[62, 3, 1, "", "expects_merged_dataframes"], [62, 3, 1, "", "file_extension"], [62, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[63, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[64, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[64, 4, 1, "", "merge_files"]], "graphnet.datasets": [[66, 0, 0, "-", "prometheus_datasets"], [67, 0, 0, "-", "snowstorm_dataset"], [68, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[66, 1, 1, "", "BaikalGVDSmall"], [66, 1, 1, "", "PONESmall"], [66, 1, 1, "", "PublicPrometheusDataset"], [66, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.snowstorm_dataset": [[67, 1, 1, "", "SnowStormDataset"]], "graphnet.datasets.test_dataset": [[68, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[70, 0, 0, "-", "deployer"], [71, 0, 0, "-", "deployment_module"], [72, 0, 0, "-", "i3modules"], [74, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[70, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[70, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[71, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[73, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[73, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[75, 0, 0, "-", "cleaning_module"], [76, 0, 0, "-", "i3deployer"], [77, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[75, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[76, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[77, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[79, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[79, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[81, 0, 0, "-", "coarsening"], [82, 0, 0, "-", "components"], [86, 0, 0, "-", "detector"], [91, 0, 0, "-", "easy_model"], [92, 0, 0, "-", "gnn"], [102, 0, 0, "-", "graphs"], [111, 0, 0, "-", "model"], [112, 0, 0, "-", "normalizing_flow"], [113, 0, 0, "-", "rnn"], [115, 0, 0, "-", "standard_averaged_model"], [116, 0, 0, "-", "standard_model"], [117, 0, 0, "-", "task"], [121, 0, 0, "-", "transformer"], [123, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[81, 1, 1, "", "AttributeCoarsening"], [81, 1, 1, "", "Coarsening"], [81, 1, 1, "", "CustomDOMCoarsening"], [81, 1, 1, "", "DOMAndTimeWindowCoarsening"], [81, 1, 1, "", "DOMCoarsening"], [81, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[81, 4, 1, "", "forward"], [81, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[83, 0, 0, "-", "embedding"], [84, 0, 0, "-", "layers"], [85, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[83, 1, 1, "", "FourierEncoder"], [83, 1, 1, "", "LinearEdgeEncoder"], [83, 1, 1, "", "LinearNodeEncoder"], [83, 1, 1, "", "RRWPLinearEdgeEncoder"], [83, 1, 1, "", "RRWPLinearNodeEncoder"], [83, 1, 1, "", "RWSELinearNodeEncoder"], [83, 1, 1, "", "SinusoidalPosEmb"], [83, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[84, 1, 1, "", "Attention_rel"], [84, 1, 1, "", "Block"], [84, 1, 1, "", "Block_rel"], [84, 1, 1, "", "DropPath"], [84, 1, 1, "", "DynEdgeConv"], [84, 1, 1, "", "DynTrans"], [84, 1, 1, "", "EdgeConvTito"], [84, 1, 1, "", "GritSparseMHA"], [84, 1, 1, "", "GritTransformerLayer"], [84, 1, 1, "", "Mlp"], [84, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[84, 4, 1, "", "extra_repr"], [84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[84, 4, 1, "", "forward"], [84, 4, 1, "", "message"], [84, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[84, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[85, 5, 1, "", "group_by"], [85, 5, 1, "", "group_pulses_to_dom"], [85, 5, 1, "", "group_pulses_to_pmt"], [85, 5, 1, "", "min_pool"], [85, 5, 1, "", "min_pool_x"], [85, 5, 1, "", "std_pool"], [85, 5, 1, "", "std_pool_x"], [85, 5, 1, "", "sum_pool"], [85, 5, 1, "", "sum_pool_and_distribute"], [85, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[87, 0, 0, "-", "detector"], [88, 0, 0, "-", "icecube"], [89, 0, 0, "-", "liquido"], [90, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[87, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[87, 4, 1, "", "feature_map"], [87, 4, 1, "", "forward"], [87, 3, 1, "", "geometry_table"], [87, 3, 1, "", "sensor_index_name"], [87, 3, 1, "", "sensor_position_names"], [87, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[88, 1, 1, "", "IceCube86"], [88, 1, 1, "", "IceCubeDeepCore"], [88, 1, 1, "", "IceCubeKaggle"], [88, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[88, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[89, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[90, 1, 1, "", "ARCA115"], [90, 1, 1, "", "BaikalGVD8"], [90, 1, 1, "", "IceCube86Prometheus"], [90, 1, 1, "", "IceCubeDeepCore8"], [90, 1, 1, "", "IceCubeGen2"], [90, 1, 1, "", "IceCubeUpgrade7"], [90, 1, 1, "", "IceDemo81"], [90, 1, 1, "", "ORCA150"], [90, 1, 1, "", "ORCA150SuperDense"], [90, 1, 1, "", "PONETriangle"], [90, 1, 1, "", "Prometheus"], [90, 1, 1, "", "TRIDENT1211"], [90, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[90, 4, 1, "", "feature_map"], [90, 2, 1, "", "geometry_table_path"], [90, 2, 1, "", "sensor_id_column"], [90, 2, 1, "", "string_id_column"], [90, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[91, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[91, 4, 1, "", "compute_loss"], [91, 4, 1, "", "configure_optimizers"], [91, 4, 1, "", "fit"], [91, 4, 1, "", "forward"], [91, 4, 1, "", "inference"], [91, 4, 1, "", "predict"], [91, 4, 1, "", "predict_as_dataframe"], [91, 3, 1, "", "prediction_labels"], [91, 4, 1, "", "shared_step"], [91, 3, 1, "", "target_labels"], [91, 4, 1, "", "train"], [91, 4, 1, "", "training_step"], [91, 4, 1, "", "validate_tasks"], [91, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[93, 0, 0, "-", "RNN_tito"], [94, 0, 0, "-", "convnet"], [95, 0, 0, "-", "dynedge"], [96, 0, 0, "-", "dynedge_jinst"], [97, 0, 0, "-", "dynedge_kaggle_tito"], [98, 0, 0, "-", "gnn"], [99, 0, 0, "-", "grit"], [100, 0, 0, "-", "icemix"], [101, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[93, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[94, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[94, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[95, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[95, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[96, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[96, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[97, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[97, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[98, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[98, 4, 1, "", "forward"], [98, 3, 1, "", "nb_inputs"], [98, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[99, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[99, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[100, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[100, 4, 1, "", "forward"], [100, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[101, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[101, 4, 1, "", "forward"]], "graphnet.models.graphs": [[103, 0, 0, "-", "edges"], [106, 0, 0, "-", "graph_definition"], [107, 0, 0, "-", "graphs"], [108, 0, 0, "-", "nodes"], [110, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[104, 0, 0, "-", "edges"], [105, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[104, 1, 1, "", "EdgeDefinition"], [104, 1, 1, "", "EuclideanEdges"], [104, 1, 1, "", "KNNDistanceEdges"], [104, 1, 1, "", "KNNEdges"], [104, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[104, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[105, 1, 1, "", "MinkowskiKNNEdges"], [105, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[106, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[106, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[107, 1, 1, "", "EdgelessGraph"], [107, 1, 1, "", "KNNGraph"], [107, 1, 1, "", "KNNGraphRRWP"], [107, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.graphs.graphs.KNNGraphRRWP": [[107, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs.KNNGraphRWSE": [[107, 4, 1, "", "forward"]], "graphnet.models.graphs.nodes": [[109, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[109, 1, 1, "", "IceMixNodes"], [109, 1, 1, "", "NodeAsDOMTimeSeries"], [109, 1, 1, "", "NodeDefinition"], [109, 1, 1, "", "NodesAsPulses"], [109, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[109, 4, 1, "", "forward"], [109, 3, 1, "", "nb_outputs"], [109, 4, 1, "", "set_number_of_inputs"], [109, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[110, 1, 1, "", "cluster_and_pad"], [110, 5, 1, "", "cluster_summarize_with_percentiles"], [110, 5, 1, "", "gather_cluster_sequence"], [110, 5, 1, "", "ice_transparency"], [110, 5, 1, "", "identify_indices"], [110, 5, 1, "", "lex_sort"]], "graphnet.models.graphs.utils.cluster_and_pad": [[110, 4, 1, "", "add_charge_threshold_summary"], [110, 4, 1, "", "add_counts"], [110, 4, 1, "", "add_mean"], [110, 4, 1, "", "add_percentile_summary"], [110, 4, 1, "", "add_std"], [110, 4, 1, "", "add_sum_charge"]], "graphnet.models.model": [[111, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[111, 4, 1, "", "extra_repr"], [111, 4, 1, "", "extra_repr_recursive"], [111, 4, 1, "", "from_config"], [111, 4, 1, "", "load"], [111, 4, 1, "", "load_state_dict"], [111, 4, 1, "", "save"], [111, 4, 1, "", "save_state_dict"], [111, 4, 1, "", "set_verbose_print_recursively"], [111, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[112, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[112, 4, 1, "", "forward"], [112, 4, 1, "", "shared_step"], [112, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[114, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[114, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[114, 4, 1, "", "clean_up_data_object"], [114, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[115, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[115, 4, 1, "", "load_state_dict"], [115, 4, 1, "", "on_train_end"], [115, 4, 1, "", "optimizer_step"], [115, 4, 1, "", "training_step"], [115, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[116, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[116, 4, 1, "", "compute_loss"], [116, 4, 1, "", "forward"], [116, 4, 1, "", "shared_step"], [116, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[118, 0, 0, "-", "classification"], [119, 0, 0, "-", "reconstruction"], [120, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[118, 1, 1, "", "BinaryClassificationTask"], [118, 1, 1, "", "BinaryClassificationTaskLogits"], [118, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[119, 1, 1, "", "AzimuthReconstruction"], [119, 1, 1, "", "AzimuthReconstructionWithKappa"], [119, 1, 1, "", "DirectionReconstructionWithKappa"], [119, 1, 1, "", "EnergyReconstruction"], [119, 1, 1, "", "EnergyReconstructionWithPower"], [119, 1, 1, "", "EnergyReconstructionWithUncertainty"], [119, 1, 1, "", "EnergyTCReconstruction"], [119, 1, 1, "", "InelasticityReconstruction"], [119, 1, 1, "", "PositionReconstruction"], [119, 1, 1, "", "TimeReconstruction"], [119, 1, 1, "", "VertexReconstruction"], [119, 1, 1, "", "VisibleInelasticityReconstruction"], [119, 1, 1, "", "ZenithReconstruction"], [119, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[119, 2, 1, "", "default_prediction_labels"], [119, 2, 1, "", "default_target_labels"], [119, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[120, 1, 1, "", "IdentityTask"], [120, 1, 1, "", "LearnedTask"], [120, 1, 1, "", "StandardFlowTask"], [120, 1, 1, "", "StandardLearnedTask"], [120, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[120, 3, 1, "", "default_prediction_labels"], [120, 3, 1, "", "default_target_labels"], [120, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[120, 4, 1, "", "compute_loss"], [120, 4, 1, "", "forward"], [120, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[120, 3, 1, "", "default_prediction_labels"], [120, 4, 1, "", "forward"], [120, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[120, 4, 1, "", "compute_loss"], [120, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[120, 3, 1, "", "default_prediction_labels"], [120, 3, 1, "", "default_target_labels"], [120, 4, 1, "", "inference"], [120, 3, 1, "", "nb_inputs"], [120, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[122, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[122, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[122, 4, 1, "", "forward"]], "graphnet.models.utils": [[123, 5, 1, "", "add_full_rrwp"], [123, 5, 1, "", "array_to_sequence"], [123, 5, 1, "", "calculate_distance_matrix"], [123, 5, 1, "", "calculate_xyzt_homophily"], [123, 5, 1, "", "full_edge_index"], [123, 5, 1, "", "get_fields"], [123, 5, 1, "", "get_rw_landing_probs"], [123, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[125, 0, 0, "-", "callbacks"], [126, 0, 0, "-", "labels"], [127, 0, 0, "-", "loss_functions"], [128, 0, 0, "-", "utils"], [129, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[125, 1, 1, "", "GraphnetEarlyStopping"], [125, 1, 1, "", "PiecewiseLinearLR"], [125, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[125, 4, 1, "", "on_fit_end"], [125, 4, 1, "", "on_train_epoch_end"], [125, 4, 1, "", "on_validation_end"], [125, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[125, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[125, 4, 1, "", "get_metrics"], [125, 4, 1, "", "init_predict_tqdm"], [125, 4, 1, "", "init_test_tqdm"], [125, 4, 1, "", "init_train_tqdm"], [125, 4, 1, "", "init_validation_tqdm"], [125, 4, 1, "", "on_train_epoch_end"], [125, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[126, 1, 1, "", "Direction"], [126, 1, 1, "", "Label"], [126, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[126, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[127, 1, 1, "", "BinaryCrossEntropyLoss"], [127, 1, 1, "", "CrossEntropyLoss"], [127, 1, 1, "", "EnsembleLoss"], [127, 1, 1, "", "EuclideanDistanceLoss"], [127, 1, 1, "", "LogCMK"], [127, 1, 1, "", "LogCoshLoss"], [127, 1, 1, "", "LossFunction"], [127, 1, 1, "", "MAELoss"], [127, 1, 1, "", "MSELoss"], [127, 1, 1, "", "RMSELoss"], [127, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [127, 1, 1, "", "VonMisesFisher2DLoss"], [127, 1, 1, "", "VonMisesFisher3DLoss"], [127, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[127, 4, 1, "", "backward"], [127, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[127, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[127, 4, 1, "", "log_cmk"], [127, 4, 1, "", "log_cmk_approx"], [127, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[128, 5, 1, "", "collate_fn"], [128, 1, 1, "", "collator_sequence_buckleting"], [128, 5, 1, "", "get_predictions"], [128, 5, 1, "", "make_dataloader"], [128, 5, 1, "", "make_train_validation_dataloader"], [128, 5, 1, "", "save_results"], [128, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[129, 1, 1, "", "BjoernLow"], [129, 1, 1, "", "Uniform"], [129, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[129, 4, 1, "", "fit"]], "graphnet.utilities": [[131, 0, 0, "-", "argparse"], [132, 0, 0, "-", "config"], [139, 0, 0, "-", "decorators"], [140, 0, 0, "-", "deprecation_tools"], [141, 0, 0, "-", "filesys"], [142, 0, 0, "-", "imports"], [143, 0, 0, "-", "logging"], [144, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[131, 1, 1, "", "ArgumentParser"], [131, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[131, 2, 1, "", "standard_arguments"], [131, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[131, 4, 1, "", "contains"], [131, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[133, 0, 0, "-", "base_config"], [134, 0, 0, "-", "configurable"], [135, 0, 0, "-", "dataset_config"], [136, 0, 0, "-", "model_config"], [137, 0, 0, "-", "parsing"], [138, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[133, 1, 1, "", "BaseConfig"], [133, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[133, 4, 1, "", "as_dict"], [133, 4, 1, "", "dump"], [133, 4, 1, "", "load"], [133, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[134, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[134, 3, 1, "", "config"], [134, 4, 1, "", "from_config"], [134, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[135, 1, 1, "", "DatasetConfig"], [135, 1, 1, "", "DatasetConfigSaverABCMeta"], [135, 1, 1, "", "DatasetConfigSaverMeta"], [135, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[135, 4, 1, "", "as_dict"], [135, 2, 1, "", "features"], [135, 2, 1, "", "graph_definition"], [135, 2, 1, "", "index_column"], [135, 2, 1, "", "labels"], [135, 2, 1, "", "loss_weight_column"], [135, 2, 1, "", "loss_weight_default_value"], [135, 2, 1, "", "loss_weight_table"], [135, 2, 1, "", "model_config"], [135, 2, 1, "", "node_truth"], [135, 2, 1, "", "node_truth_table"], [135, 2, 1, "", "path"], [135, 2, 1, "", "pulsemaps"], [135, 2, 1, "", "seed"], [135, 2, 1, "", "selection"], [135, 2, 1, "", "string_selection"], [135, 2, 1, "", "truth"], [135, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[136, 1, 1, "", "ModelConfig"], [136, 1, 1, "", "ModelConfigSaverABC"], [136, 1, 1, "", "ModelConfigSaverMeta"], [136, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[136, 2, 1, "", "arguments"], [136, 4, 1, "", "as_dict"], [136, 2, 1, "", "class_name"], [136, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[137, 5, 1, "", "get_all_grapnet_classes"], [137, 5, 1, "", "get_graphnet_classes"], [137, 5, 1, "", "is_graphnet_class"], [137, 5, 1, "", "is_graphnet_module"], [137, 5, 1, "", "list_all_submodules"], [137, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[138, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[138, 2, 1, "", "dataloader"], [138, 2, 1, "", "early_stopping_patience"], [138, 2, 1, "", "fit"], [138, 2, 1, "", "model_config"], [138, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[140, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[141, 5, 1, "", "find_i3_files"], [141, 5, 1, "", "has_extension"], [141, 5, 1, "", "is_gcd_file"], [141, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[142, 5, 1, "", "has_icecube_package"], [142, 5, 1, "", "has_jammy_flows_package"], [142, 5, 1, "", "has_torch_package"], [142, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[143, 1, 1, "", "Logger"], [143, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[143, 4, 1, "", "critical"], [143, 4, 1, "", "debug"], [143, 4, 1, "", "error"], [143, 3, 1, "", "file_handlers"], [143, 3, 1, "", "handlers"], [143, 4, 1, "", "info"], [143, 4, 1, "", "setLevel"], [143, 3, 1, "", "stream_handlers"], [143, 4, 1, "", "warning"], [143, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[143, 4, 1, "", "filter"], [143, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[144, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 16, 34, 45, 47, 49, 52, 53, 55, 62, 64, 70, 83, 87, 91, 94, 95, 101, 106, 112, 120, 123, 125, 129, 131, 135, 136, 143, 144, 147, 148, 149, 150, 152, 153, 154], "0": [9, 11, 13, 16, 31, 45, 47, 50, 55, 60, 75, 81, 83, 84, 85, 93, 94, 95, 97, 99, 101, 104, 105, 107, 110, 114, 120, 123, 126, 127, 128, 135, 148, 149, 151, 152, 154], "000": 148, "001": [149, 154], "01": [149, 154], "0221": 149, "02_data": 149, "03042": 96, "03762": 83, "04616": 127, "04_ensemble_dataset": 149, "05": 127, "06": 146, "06166": 104, "08570": 101, "0e04": 152, "0e4": 152, "1": [0, 7, 9, 11, 13, 14, 19, 34, 45, 47, 55, 60, 63, 66, 70, 73, 76, 81, 84, 85, 93, 95, 97, 99, 100, 101, 104, 105, 107, 110, 114, 118, 119, 120, 123, 125, 126, 127, 128, 129, 135, 147, 148, 149, 150, 151, 153, 154], "10": [9, 66, 88, 89, 90, 99, 109, 110, 131, 148, 149, 152, 154], "100": 148, "1000": [120, 148, 149], "10000": [11, 13, 16, 60, 83], "1088": 149, "10th": 110, "11": [149, 151], "12": [60, 100, 122, 135, 148, 149], "120": 149, "128": [83, 94, 95, 97, 101, 131, 148, 149, 154], "13": 60, "14": [60, 135, 148, 149], "1536": 122, "15674": 83, "16": [14, 60, 83, 93, 101, 122, 135, 148, 149, 154], "17": [14, 149], "1706": 83, "1748": 149, "17589": 99, "1809": 104, "1812": 127, "1902": 101, "192": 100, "196": 122, "1e6": 120, "2": [9, 34, 45, 55, 84, 85, 93, 95, 97, 99, 101, 104, 107, 110, 114, 119, 123, 127, 135, 148, 149, 151, 154], "20": [11, 13, 16, 60, 143, 149, 151, 152, 154], "200": [148, 152], "200000": 63, "2018": 146, "2019": 127, "2020": [0, 150, 153], "2023": 14, "21": [99, 146, 148, 149], "2209": 96, "2305": 99, "2310": 83, "256": [95, 97, 101, 122], "26": 148, "2d": [123, 127], "2nd": [14, 83, 100], "3": [85, 93, 94, 97, 105, 110, 114, 119, 122, 123, 127, 146, 149, 151, 152], "30": 152, "300": [148, 152], "32": [14, 83, 100, 122], "336": [95, 97], "384": [83, 100, 122], "39": [0, 150, 153], "3d": [119, 127], "4": [14, 84, 96, 100, 110, 119, 149, 152, 154], "40": 152, "400": 64, "42": 9, "5": [11, 13, 16, 60, 84, 93, 99, 110, 114, 127, 131, 147, 148, 149, 151, 152, 154], "50": [109, 110, 131, 152], "500": [110, 152], "50000": [60, 135, 148, 149], "5001": 148, "50th": 110, "59": 151, "6": [83, 85, 100, 122], "64": [93, 101], "7": [75, 85], "700": 127, "768": 109, "8": [84, 85, 93, 95, 97, 99, 107, 114, 123, 127, 128, 146, 148, 149, 151, 154], "80": [149, 154], "86": [22, 88], "890778": [0, 150, 153], "9": 9, "90": [109, 110], "90th": 110, "A": [5, 7, 9, 11, 14, 36, 49, 50, 51, 52, 53, 59, 64, 66, 68, 70, 71, 75, 76, 85, 87, 88, 89, 90, 91, 106, 107, 110, 111, 112, 116, 118, 120, 123, 127, 129, 147, 148, 149, 152, 154], "AND": [14, 127], "AS": [14, 127], "As": [95, 101, 154], "BE": [14, 127], "BUT": [14, 127], "But": 154, "By": [0, 45, 47, 50, 55, 120, 148, 149, 150, 153, 154], "FOR": [14, 127], "For": [14, 37, 109, 125, 148, 149, 154], "IN": [14, 127], "If": [5, 11, 13, 14, 21, 23, 31, 36, 64, 66, 67, 68, 83, 84, 95, 100, 101, 106, 109, 110, 111, 120, 125, 127, 129, 146, 147, 149, 154], "In": [45, 47, 49, 50, 55, 62, 123, 135, 136, 147, 149, 151], "It": [1, 5, 34, 59, 75, 83, 110, 118, 120, 146, 148, 149, 154], "NO": [14, 127], "NOT": [14, 59, 127, 149], "No": [0, 149, 150, 153], "OF": [14, 127], "ONE": 66, "OR": [14, 127], "On": 5, "One": 149, "Or": 148, "Such": 59, "THE": [14, 127], "TO": [14, 127], "That": [11, 13, 16, 95, 101, 119, 126, 149, 154], "The": [0, 7, 9, 11, 13, 14, 16, 18, 34, 37, 45, 47, 55, 59, 62, 63, 64, 70, 71, 73, 75, 76, 77, 81, 83, 84, 85, 93, 95, 97, 100, 101, 104, 106, 107, 110, 112, 114, 118, 119, 120, 122, 123, 125, 126, 127, 140, 147, 148, 150, 152, 153], "Then": [5, 146], "There": [149, 154], "These": [0, 49, 62, 64, 106, 146, 148, 149, 150, 152, 153, 154], "To": [148, 149, 151, 152, 154], "WITH": [14, 127], "Will": [5, 66, 67, 68, 70, 73, 75, 76, 77, 104, 147], "With": [149, 152, 154], "_": 149, "__": [34, 37, 149], "_____________________": [14, 127], "__call__": [19, 21, 49, 71, 147, 148, 149, 152], "__init__": [135, 136, 147, 148, 149, 154], "_accepted_extractor": [147, 152], "_accepted_file_extens": [147, 152], "_and_": [95, 101], "_charge_sum": 110, "_charge_weight": 110, "_cluster_nam": 110, "_column_nam": 147, "_construct_edg": 104, "_count": 110, "_definition_": 149, "_extractor": [147, 152], "_extractor_nam": [147, 152], "_file_extens": 147, "_file_hash": 5, "_fit_weight": 129, "_forward": 154, "_get_dir_nam": 5, "_indic": [11, 13], "_layer": 154, "_lrschedul": 125, "_may_": [11, 13], "_merge_datafram": 147, "_padded_x": 110, "_pred": 120, "_save_fil": 147, "_sensor_tim": 152, "_sensor_xyz": 152, "_tabl": 147, "_task": [91, 112, 116], "_verify_column": 147, "_x_": 149, "_zipped_fil": 5, "a__b": 34, "ab": [60, 99, 101, 127, 135, 148, 149], "abc": [7, 11, 19, 49, 62, 70, 111, 126, 129, 134, 135, 136], "abcmeta": [135, 136], "abil": 148, "abl": [34, 109, 112, 147, 149, 151, 152, 154], "about": [111, 148, 149, 152], "abov": [14, 127, 129, 148, 149, 152, 154], "abs_p": 107, "absolut": [84, 99, 107, 123, 127], "absopt": 109, "absorpt": 110, "abstract": [1, 5, 11, 62, 87, 98, 106, 120, 134, 149], "abstractmethod": 148, "acceler": 1, "accept": [49, 146, 154], "accepted_extractor": [49, 147], "accepted_file_extens": [49, 147], "access": [107, 126, 148], "accompani": [45, 47, 50, 55, 149], "accord": [81, 85, 104, 106, 107, 110, 127], "achiev": 151, "achitectur": 154, "across": [1, 2, 11, 13, 16, 37, 56, 70, 73, 76, 85, 91, 116, 123, 127, 130, 131, 132, 143, 152], "act": [120, 127, 149, 154], "action": [14, 127], "activ": [84, 91, 93, 95, 99, 101, 109, 114, 120, 146], "activation_lay": [95, 101], "actual": [149, 154], "ad": [7, 11, 13, 16, 22, 45, 47, 55, 83, 95, 100, 109, 110], "adam": [112, 149, 154], "adapt": [99, 149, 154], "add": [11, 83, 84, 95, 99, 101, 107, 110, 123, 131, 140, 146, 149, 152], "add_batchnorm_lay": 101, "add_charge_threshold_summari": 110, "add_count": [109, 110], "add_full_rrwp": [80, 123], "add_global_variables_after_pool": [95, 149, 154], "add_ice_properti": 109, "add_ident": 123, "add_inactive_sensor": 106, "add_label": [11, 148, 149], "add_mean": 110, "add_node_attr_as_self_loop": [83, 99], "add_norm_lay": 95, "add_percentile_summari": 110, "add_std": 110, "add_sum_charg": 110, "add_to_databas": 129, "addit": [49, 62, 81, 84, 91, 107, 110, 127, 129, 147, 149, 154], "additional_attribut": [91, 128, 149, 154], "address": 154, "adher": [146, 154], "adjac": [87, 123], "adjust": 154, "advanc": [1, 85], "after": [9, 84, 93, 95, 97, 99, 101, 125, 131, 135, 148, 149, 154], "again": [149, 154], "against": 5, "aggr": 84, "aggreg": [84, 85, 110], "agnost": [0, 150, 153, 154], "agreement": [0, 146, 150, 153], "ai": 149, "aim": [0, 1, 146, 149, 150, 153], "algorithm": 26, "all": [1, 5, 11, 13, 14, 16, 18, 19, 21, 23, 36, 59, 64, 66, 67, 68, 75, 83, 84, 85, 87, 95, 98, 101, 105, 106, 110, 111, 120, 127, 129, 133, 134, 135, 136, 137, 138, 143, 146, 147, 148, 149, 152, 154], "allow": [0, 5, 39, 69, 72, 80, 85, 125, 133, 138, 148, 149, 150, 153, 154], "almost": 123, "along": [110, 149, 154], "alongsid": [149, 154], "alreadi": 59, "also": [7, 11, 13, 16, 60, 93, 135, 147, 148, 149, 152, 154], "alter": [106, 110], "altern": [95, 127, 146], "alwai": 128, "amount": 93, "an": [0, 14, 19, 37, 45, 47, 50, 55, 60, 72, 76, 99, 106, 107, 114, 115, 127, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154], "anaconda": 151, "analys": [69, 149], "analysi": [70, 76], "angl": [119, 126, 149, 154], "ani": [6, 7, 8, 9, 11, 13, 14, 16, 34, 35, 36, 37, 49, 51, 52, 53, 62, 64, 75, 81, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 143, 148, 149, 154], "anoth": [14, 135, 136, 148, 149], "anyth": 146, "api": [145, 147, 149], "appear": [70, 73, 76, 148, 149], "append": 106, "appli": [7, 11, 13, 16, 45, 47, 48, 49, 55, 70, 73, 76, 83, 84, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 112, 114, 116, 118, 120, 122, 127, 137, 147, 148, 149], "applic": [34, 148, 149, 154], "apply_norm": 83, "appropri": [59, 120, 149], "approx": 127, "approxim": 64, "ar": [0, 1, 4, 5, 11, 13, 14, 16, 21, 23, 31, 36, 37, 49, 60, 62, 63, 64, 70, 75, 76, 84, 85, 93, 95, 97, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 118, 123, 127, 129, 135, 136, 146, 147, 148, 149, 150, 152, 153, 154], "arbitrari": [0, 150, 153], "arca": 90, "arca115": [86, 90], "architectur": [1, 94, 95, 96, 97, 101, 112, 114, 122, 149, 154], "archiv": 128, "area": 1, "arg": [11, 13, 16, 18, 36, 81, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 127, 131, 133, 143, 147, 152], "argpars": [1, 130], "argument": [5, 9, 14, 63, 66, 67, 68, 100, 112, 125, 129, 131, 133, 135, 136, 138, 148, 149, 152, 154], "argumentpars": [130, 131], "aris": [14, 127], "arrai": [19, 31, 34, 109, 110, 123, 147, 148, 149, 152], "array_to_sequ": [80, 123], "arriv": 148, "art": [0, 150, 153], "articl": 149, "artifact": [149, 154], "arxiv": [83, 99, 101, 104, 127], "as_dict": [133, 135, 136, 149, 154], "assert": [147, 148], "assertionerror": 147, "assign": [7, 11, 13, 16, 81, 85, 104, 107, 123, 146, 147], "associ": [14, 75, 77, 106, 110, 119, 127, 147, 148, 149, 152, 154], "assort": 144, "assum": [5, 75, 83, 87, 106, 110, 120, 123], "atmospher": 148, "attach": 59, "attach_index": [56, 59], "attempt": [21, 31, 149], "attent": [83, 84, 99, 100, 122], "attention_rel": [82, 84], "attn_activ": [84, 99], "attn_bia": 84, "attn_clamp": [84, 99], "attn_drop": 84, "attn_dropout": [84, 99], "attn_edge_enh": 84, "attn_head_dim": 84, "attn_mask": 84, "attr": [83, 99], "attr_name_ab": 123, "attr_name_rel": 123, "attribut": [5, 11, 13, 16, 81, 83, 104, 120, 148, 149, 154], "attributecoarsen": [80, 81], "author": [14, 94, 96, 99, 127], "auto": 120, "autom": 146, "automat": [23, 63, 83, 106, 110, 127, 146, 147, 149, 152], "automatic_log_bin": 129, "auxiliari": [4, 83, 149, 154], "avail": [5, 7, 23, 66, 67, 68, 118, 119, 120, 142, 147, 148, 149, 151, 152, 154], "available_backend": 5, "available_t": 147, "averag": [85, 115, 127], "avg": 81, "avg_pool": 81, "avg_pool_x": 81, "avoid": [13, 143, 146], "awai": [1, 149], "awtd": 4, "azimiuth": 126, "azimuth": [4, 119, 126], "azimuth_kappa": 119, "azimuth_kei": 126, "azimuth_pr": 119, "azimuthreconstruct": [117, 119], "azimuthreconstructionwithkappa": [117, 119], "b": [34, 81, 85, 123, 149, 152, 154], "backbon": [112, 149], "backend": [5, 12, 15, 61, 63, 66, 68, 152], "backward": [110, 127], "baikal": 66, "baikalgvd8": [86, 90], "baikalgvdsmal": [65, 66], "bar": 125, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 79, 81, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 142, 143, 147, 148, 149, 150, 153, 154], "base_config": [130, 132], "baseclass": [70, 76], "baseconfig": [132, 133, 134, 135, 136, 138], "basemodel": [133, 135, 136], "basi": 154, "basic": [1, 149], "batch": [0, 8, 13, 14, 63, 81, 84, 85, 91, 101, 112, 114, 116, 123, 128, 131, 148, 150, 153], "batch_idx": [91, 112, 115, 116, 123], "batch_norm_momentum": 84, "batch_norm_runn": 84, "batch_siz": [8, 9, 14, 123, 128, 148, 149, 154], "batch_split": 128, "batchnorm": [83, 84, 99], "batchnorm1d": [83, 84, 99], "batchsampl": 14, "becaus": [58, 149, 154], "been": [5, 73, 75, 127, 146, 154], "befor": [11, 13, 95, 105, 114, 120, 125], "behavior": 147, "behaviour": 125, "behind": [149, 154], "being": [21, 31, 75, 83, 118, 120, 148, 149, 154], "beitv2": 84, "belong": 123, "below": [5, 60, 109, 129, 146, 147, 149, 150, 152, 153, 154], "benchmark": [5, 123], "besid": 148, "bessel": 127, "best": [0, 125, 146, 150, 153], "better": 146, "between": [39, 66, 83, 91, 102, 103, 104, 105, 108, 112, 116, 120, 123, 125, 127, 129, 135, 136, 149, 154], "bia": [83, 84, 122], "bias": [99, 149, 154], "big": [149, 154], "biject": 147, "bin": [14, 129], "binari": [116, 118, 127, 154], "binaryclassificationtask": [117, 118, 149, 154], "binaryclassificationtasklogit": [117, 118], "binarycrossentropyloss": [124, 127], "bjoernlow": [124, 129], "black": 146, "blob": [14, 83, 84, 99, 123, 127, 149], "block": [0, 1, 82, 84, 101, 149, 150, 153], "block_rel": [82, 84], "boilerpl": 154, "bool": [8, 14, 35, 36, 37, 59, 60, 62, 75, 83, 84, 91, 93, 95, 97, 99, 100, 101, 106, 107, 109, 110, 111, 116, 122, 123, 125, 127, 128, 129, 131, 137, 140, 141, 142, 143], "boost": 37, "border": 31, "both": [0, 23, 112, 116, 120, 149, 150, 152, 153, 154], "bottleneck": 14, "boundari": 31, "box": [147, 149, 154], "branch": 146, "break_cyclic_recurs": [33, 37], "broken": [45, 47, 50, 55], "bucket": [14, 122, 128], "bucket_width": 14, "bug": [146, 149], "build": [0, 1, 80, 87, 104, 105, 109, 110, 111, 112, 133, 135, 136, 149, 150, 153, 154], "built": [0, 80, 106, 112, 148, 149, 150, 152, 153, 154], "c": [14, 21, 31, 34, 85, 105, 127, 149], "c_": 127, "cach": 13, "cache_s": 13, "calcul": [75, 83, 84, 91, 99, 104, 107, 109, 110, 112, 116, 123, 126, 127, 148, 149, 154], "calculate_distance_matrix": [80, 123], "calculate_xyzt_homophili": [80, 123], "calibr": [35, 37], "call": [7, 14, 23, 37, 83, 85, 120, 125, 129, 143, 147, 149, 152, 154], "callabl": [8, 11, 37, 84, 85, 87, 88, 89, 90, 106, 115, 120, 128, 129, 133, 135, 136, 137, 142, 152], "callback": [1, 91, 124, 149, 154], "can": [0, 1, 5, 9, 11, 13, 14, 16, 19, 23, 26, 67, 75, 83, 85, 106, 107, 112, 129, 131, 133, 135, 136, 146, 147, 148, 149, 150, 152, 153, 154], "cannot": [37, 114, 129, 133, 138], "cap": 129, "capabl": [0, 116, 150, 153], "captur": [149, 154], "care": 148, "carlo": 35, "cascad": 119, "cascadefilter_13": 4, "case": [11, 13, 16, 23, 45, 47, 50, 55, 75, 85, 110, 120, 147, 148, 149, 151, 154], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 149, "caveat": [149, 154], "cc": 126, "cd": 151, "center": 104, "centr": 104, "central": [149, 151], "certain": 149, "cfg": 11, "cframe": [21, 31], "chain": [0, 1, 69, 72, 80, 91, 112, 116, 127, 150, 151, 153], "chang": [127, 146, 149, 154], "charg": [4, 14, 83, 93, 109, 110, 114, 127, 148, 149, 154], "charge_column": 109, "charge_index": 110, "check": [8, 35, 36, 37, 49, 59, 109, 131, 141, 142, 146, 152], "checkpoint": 149, "checkpointing_bas": 149, "chenli2049": 122, "cherenkov": [109, 110, 149, 152, 154], "choic": [148, 149, 154], "choos": [149, 154], "chosen": [104, 110, 143, 148], "chunk": [13, 14, 147], "chunk_siz": 13, "chunks_per_seg": 14, "citat": 5, "cite": 5, "ckpt": [149, 154], "ckpt_path": 91, "claim": [14, 127], "clamp": [84, 99], "clash": 143, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 143, 146, 147, 148], "class_nam": [11, 36, 49, 51, 52, 53, 62, 136, 143, 148, 149, 154], "classif": [1, 80, 116, 117, 120, 127, 149, 154], "classifi": [118, 148, 149, 154], "classmethod": [8, 11, 111, 127, 133, 149, 154], "classvar": [133, 135, 136, 138], "clean": [75, 146, 151], "clean_up_data_object": 114, "cleaning_modul": [69, 74], "cleanup": 9, "clear": [143, 148], "cli": 131, "clone": 151, "close": 9, "closest": 125, "cloud": [149, 154], "cls_tocken": 100, "cluster": [5, 81, 84, 85, 93, 95, 97, 101, 109, 110, 114], "cluster_and_pad": [102, 110], "cluster_class": 110, "cluster_column": 110, "cluster_index": 85, "cluster_indic": 110, "cluster_on": [109, 110], "cluster_summarize_with_percentil": [102, 110], "clustered_x": 110, "cnn": [149, 154], "coarsen": [1, 80, 85], "code": [0, 31, 45, 55, 59, 83, 84, 99, 106, 123, 135, 136, 147, 148, 149, 150, 152, 153, 154], "coincid": 109, "col": 107, "collabor": [1, 67, 149, 154], "collate_fn": [3, 8, 124, 128], "collator_sequence_bucklet": [124, 128], "collect": [11, 20, 33, 72, 127, 144, 149, 154], "column": [7, 11, 13, 16, 19, 41, 43, 45, 47, 55, 59, 63, 64, 71, 77, 79, 83, 87, 91, 93, 104, 106, 107, 109, 110, 114, 118, 119, 120, 123, 127, 129, 147, 148, 149, 152, 154], "column_nam": [41, 147], "column_offset": 110, "columnmissingexcept": [11, 13, 78, 79], "com": [14, 83, 84, 99, 100, 112, 122, 123, 127, 149, 151], "combin": [18, 34, 47, 93, 116, 127, 135, 154], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [5, 91, 120, 147, 148, 149, 154], "command": 131, "comment": 5, "commit": 146, "common": [0, 1, 127, 135, 136, 139, 142, 148, 149, 150, 153], "compar": [149, 154], "comparison": [26, 127], "compat": [49, 60, 91, 112, 116, 120, 147, 148, 149, 154], "competit": [83, 84, 88, 97, 100], "complementari": 123, "complet": [0, 14, 80, 149, 150, 151, 153, 154], "complex": [0, 80, 149, 150, 153], "compon": [0, 1, 80, 83, 84, 85, 91, 111, 112, 116, 149, 150, 153, 154], "compos": [149, 154], "composit": 143, "comprehens": 149, "compress": [5, 148], "compris": [0, 150, 153], "comput": [71, 84, 91, 105, 110, 116, 120, 123, 127, 148, 149], "compute_loss": [91, 116, 120], "compute_minkowski_distance_mat": [103, 105], "con": [149, 154], "concatdataset": 11, "concaten": [11, 34, 95], "concept": 146, "conceptu": [147, 149], "concret": 149, "condit": [14, 112, 120, 127], "condition_on": 112, "confid": 149, "config": [1, 8, 60, 125, 127, 130, 131, 133, 134, 135, 136, 137, 138, 148, 149, 154], "config_dir": [149, 154], "configdict": [133, 135, 136, 138], "configur": [0, 1, 9, 11, 46, 47, 71, 72, 80, 91, 111, 130, 132, 133, 135, 136, 138, 143, 147, 149, 150, 153, 154], "configure_optim": 91, "conflict": 149, "conform": [133, 135, 136, 138], "conjunct": [19, 120], "conn": 149, "connect": [0, 9, 14, 83, 84, 99, 104, 105, 106, 109, 127, 148, 149, 150, 153], "consequ": 111, "consid": [75, 93, 148, 149, 152], "consist": [83, 131, 143, 146, 149, 154], "consortium": [0, 150, 153], "constant": [1, 3, 120, 123, 145, 148, 149, 154], "constitut": [63, 148], "constraint": [91, 149], "construct": [5, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 49, 51, 52, 53, 60, 62, 63, 64, 66, 67, 68, 71, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 128, 129, 131, 134, 135, 136, 143, 147, 148, 149, 154], "constructor": [147, 148, 149], "consult": 154, "consum": 149, "consumpt": 148, "conta": 14, "contain": [0, 5, 6, 7, 11, 13, 14, 16, 17, 18, 21, 34, 35, 38, 39, 40, 43, 45, 47, 49, 50, 51, 55, 59, 62, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 79, 91, 95, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 120, 123, 127, 129, 131, 147, 148, 149, 150, 152, 153, 154], "containeris": 1, "content": [147, 154], "context": 68, "continu": [0, 127, 149, 150, 153], "contract": [14, 127], "contribut": [0, 127, 149, 150, 153], "contributor": 146, "conveni": [1, 146, 149, 154], "convent": [45, 47, 50, 55], "convers": [7, 38, 39, 43, 45, 55, 109, 148, 149, 152], "convert": [0, 1, 3, 5, 7, 13, 21, 31, 34, 36, 45, 46, 47, 55, 57, 63, 65, 123, 147, 148, 149, 150, 151, 152, 153], "converteddataset": 5, "convex": 31, "convnet": [80, 92, 149], "convolut": [84, 94, 95, 96, 97, 101], "coo": 148, "coordin": [31, 87, 105, 109, 110, 123, 149], "copi": [14, 127, 148], "copyright": [14, 127], "core": 98, "correct": [123, 127], "correpond": 58, "correspond": [11, 13, 16, 34, 37, 58, 95, 101, 106, 107, 110, 129, 141, 148, 149, 152, 154], "cosh": 127, "could": [146, 149, 154], "count": 110, "counterpart": 148, "cover": 60, "cpu": [7, 14, 45, 47, 55, 71], "creat": [5, 9, 14, 59, 106, 107, 109, 110, 133, 134, 138, 146, 148, 154], "create_t": [56, 59], "create_table_and_save_to_sql": [56, 59], "creator": 5, "critic": [143, 149, 152], "cross": 127, "crossentropyloss": [124, 127], "csv": [128, 135, 148, 149, 152, 154], "ctx": 127, "cuda": 151, "cumul": 110, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 66, 68], "curi": [0, 150, 153], "current": [60, 114, 125, 146, 149], "curv": 129, "custom": [11, 49, 78, 106, 125, 154], "custom_label_funct": 106, "customdomcoarsen": [80, 81], "customis": 125, "cut": 128, "d": [34, 105, 106, 109, 123, 146, 152], "damag": [14, 127], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 109, 110, 112, 114, 115, 116, 120, 122, 123, 126, 128, 131, 133, 135, 138, 142, 145, 148, 149, 150, 153, 154], "data_path": 106, "data_sourc": 14, "databas": [5, 16, 59, 64, 129, 148, 149], "database_exist": [56, 59], "database_indic": 128, "database_nam": 64, "database_path": [59, 129], "database_table_exist": [56, 59], "dataclass": [1, 3, 35], "dataconfig": [135, 148], "dataconvert": [1, 3, 46, 62, 63, 64, 149, 152], "dataformat": [61, 64], "datafram": [59, 60, 62, 87, 91, 128, 129, 147, 149, 152, 154], "dataload": [1, 3, 5, 9, 13, 66, 67, 68, 91, 106, 128, 138, 148, 149, 154], "datamodul": [1, 3, 5], "datarepresent": 112, "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 25, 60, 63, 66, 67, 68, 79, 93, 106, 114, 131, 135, 145, 152, 154], "dataset_1": [148, 149], "dataset_2": [148, 149], "dataset_3": [148, 149], "dataset_arg": 9, "dataset_config": [130, 132, 149, 154], "dataset_config_path": [149, 154], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 60, 132, 135, 148, 154], "datasetconfigsav": 135, "datasetconfigsaverabcmeta": [132, 135], "datasetconfigsavermeta": [132, 135], "db": [64, 128, 129, 148, 149], "db_count_norm": 129, "dbang_decay_length": 4, "ddp": [149, 154], "de": 34, "deactiv": [91, 120], "deal": [14, 127], "debug": [143, 149], "decai": 100, "decor": [1, 130, 142], "dedic": 146, "deem": 37, "deep": [0, 5, 62, 64, 84, 97, 100, 147, 149, 150, 151, 152, 153, 154], "deepcopi": 140, "deepcor": [4, 22, 88], "deepcorefilter_13": 4, "deepic": [92, 100], "def": [147, 148, 149, 152, 154], "default": [5, 7, 9, 11, 13, 14, 16, 21, 23, 31, 34, 43, 45, 47, 50, 55, 59, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 122, 123, 125, 126, 127, 129, 131, 133, 141, 148, 149], "default_prediction_label": [118, 119, 120, 154], "default_target_label": [118, 119, 120, 154], "default_typ": 59, "defin": [5, 11, 13, 16, 31, 60, 66, 67, 68, 71, 75, 77, 85, 102, 103, 104, 106, 108, 110, 112, 128, 135, 148, 149, 152, 154], "definit": [104, 106, 107, 109, 111, 120, 146, 149, 154], "deg": 107, "deg_scal": 84, "degre": [84, 107], "deleg": 143, "deliv": 91, "demo_ic": 90, "demo_wat": 90, "denot": [19, 125, 126, 147, 152], "dens": 85, "depend": [0, 83, 147, 148, 149, 150, 153, 154], "deploi": [0, 1, 69, 71, 149, 150, 151, 153], "deploy": [0, 1, 71, 73, 74, 75, 76, 77, 106, 145, 149, 150, 152, 153, 154], "deployment_modul": [1, 69], "deploymentmodul": [69, 70, 71, 73, 76, 77], "deprec": [44, 45, 54, 55, 73, 140], "deprecated_method": [3, 44, 54, 69, 72], "deprecation_tool": [1, 130], "depth": [84, 100, 110, 122], "depth_rel": 100, "describ": [5, 146, 149], "descript": [5, 111, 131], "design": [1, 149, 152], "desir": [129, 141], "detail": [1, 5, 93, 111, 112, 120, 125, 148, 149, 151, 152, 154], "detector": [0, 1, 31, 72, 80, 88, 89, 90, 106, 107, 109, 148, 149, 150, 153, 154], "detector_respons": 149, "determin": [70, 73, 76, 93], "develop": [0, 1, 146, 148, 149, 150, 151, 152, 153, 154], "deviat": [106, 107, 110], "devic": 71, "df": [59, 147], "dfg": [0, 150, 153], "diagon": 123, "dict": [5, 8, 9, 11, 13, 16, 23, 34, 37, 59, 71, 87, 88, 89, 90, 91, 100, 106, 107, 109, 111, 112, 115, 125, 128, 131, 133, 135, 136, 137, 138, 140, 147, 148, 149, 152], "dictionari": [11, 13, 16, 19, 34, 35, 37, 49, 59, 106, 107, 111, 133, 135, 136, 138, 147, 152], "did": 14, "differ": [0, 11, 13, 16, 19, 21, 39, 40, 41, 43, 49, 50, 51, 72, 107, 128, 146, 147, 148, 149, 150, 152, 153, 154], "difficult": 148, "diffier": [149, 154], "digit": 83, "dim": [83, 84], "dim_emb": 83, "dim_in": [83, 84], "dim_out": 84, "dimenion": [95, 97, 101], "dimens": [83, 84, 88, 89, 90, 93, 94, 95, 97, 99, 100, 101, 110, 114, 120, 122, 123, 127, 152, 154], "dimension": [83, 84, 123, 148, 154], "dir": 141, "dir_with_fil": [147, 152], "dir_x_pr": 119, "dir_y_pr": 119, "dir_z_pr": 119, "direct": [97, 110, 118, 119, 120, 124, 126, 148, 152], "direction_kappa": 119, "directionreconstructionwithkappa": [117, 119, 149, 154], "directli": [0, 95, 101, 147, 149, 150, 152, 153, 154], "directori": [5, 7, 45, 47, 49, 50, 51, 52, 53, 55, 62, 63, 66, 67, 68, 125, 141, 147, 149, 154], "dirti": 149, "discard_empty_ev": 75, "disco": 123, "disconnect": 148, "discuss": 146, "disk": [147, 148, 149], "distanc": [31, 104, 105, 107, 123], "distance_as_edge_featur": 107, "distribut": [14, 85, 95, 112, 119, 123, 127, 129, 151, 154], "distribution_strategi": 91, "ditto": 127, "diverg": 127, "divid": [70, 73, 76, 110, 120], "dk": 5, "dl": [149, 154], "dnn": [25, 32], "do": [0, 5, 14, 71, 75, 127, 135, 136, 146, 148, 149, 150, 153, 154], "do_shuffl": [3, 8], "doc": 149, "docformatt": 146, "docker": 1, "docstr": 146, "document": [14, 112, 127, 152, 154], "doe": [37, 118, 120, 136, 147, 148, 149, 154], "doesn": 59, "dom": [8, 11, 13, 16, 81, 85, 93, 109, 110, 114, 128, 149, 154], "dom_i": [4, 88, 109], "dom_numb": 4, "dom_tim": [4, 109], "dom_typ": 4, "dom_x": [4, 88, 109], "dom_z": [4, 88, 109], "domain": [0, 1, 3, 69, 149, 150, 153], "domandtimewindowcoarsen": [80, 81], "domcoarsen": [80, 81], "don": [125, 147], "done": [23, 85, 143, 146, 147, 149, 152], "dot": 84, "download": [5, 66, 67, 68, 151], "download_dir": [5, 66, 67, 68], "downsid": 148, "draw": 14, "drawn": [102, 103, 107, 108, 149, 154], "drhb": [14, 100], "drop": [14, 84, 94], "drop_last": 14, "drop_path": 84, "drop_prob": 84, "dropout": [84, 93, 99, 101, 114], "dropout_prob": 84, "dropout_ratio": 94, "dropout_readout": 101, "droppath": [82, 84], "droput": 84, "dtype": [11, 13, 16, 106, 107, 144, 148, 149, 154], "due": [148, 149, 154], "dummy_pid": [148, 149], "dump": [133, 135, 136, 147, 148, 149], "duplciat": 125, "duplic": 109, "dure": [84, 100, 106, 120, 125, 152], "dynam": [23, 84, 95, 96, 97, 101, 149, 154], "dynedg": [75, 77, 80, 92, 96, 97, 100, 101, 149, 154], "dynedge_arg": 100, "dynedge_jinst": [80, 92], "dynedge_kaggle_tito": [80, 92], "dynedge_layer_s": [95, 101, 149, 154], "dynedgeconv": [82, 84, 95, 101], "dynedgejinst": [92, 96], "dynedgetito": [92, 93, 97], "dyntran": [82, 84, 93, 97], "dyntrans1": 84, "dyntrans_layer_s": [93, 97], "e": [1, 5, 8, 9, 11, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 43, 59, 60, 64, 71, 75, 77, 81, 83, 84, 85, 87, 88, 89, 90, 94, 98, 99, 104, 106, 107, 109, 110, 111, 112, 115, 116, 118, 119, 120, 123, 125, 126, 127, 129, 133, 143, 146, 147, 148, 149, 151, 154], "each": [5, 14, 23, 34, 37, 58, 59, 63, 64, 70, 71, 73, 76, 81, 83, 84, 85, 88, 89, 90, 93, 95, 97, 101, 104, 106, 107, 109, 110, 114, 118, 120, 123, 125, 127, 128, 141, 147, 148, 149, 152, 154], "earli": [125, 131], "early_stopping_pati": [91, 138], "earlystop": 125, "easi": [0, 147, 148, 149, 150, 153, 154], "easili": [1, 149, 154], "easy_model": [1, 80], "easysyntax": [80, 91, 112, 116], "ed": 127, "edg": [80, 83, 84, 85, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 123, 148, 149, 154], "edge_attr": [148, 149], "edge_definit": [106, 107], "edge_enh": [84, 99], "edge_index": [81, 84, 123, 148, 149], "edge_weight": 123, "edgeconv": 84, "edgeconvtito": [82, 84], "edgedefinit": [102, 103, 104, 105, 106, 107, 108, 149, 154], "edgelessgraph": [102, 107], "edu": 67, "effect": [125, 146, 149, 154], "effici": 14, "effort": [146, 148, 152], "either": [0, 5, 9, 11, 16, 21, 31, 66, 68, 84, 99, 127, 147, 149, 150, 153], "elast": 4, "element": [11, 13, 19, 34, 37, 91, 112, 116, 123, 128, 137, 147, 149, 152], "elementwis": 127, "elimin": 75, "els": [75, 126, 147, 152], "ema": 115, "emb_dim": 83, "embed": [80, 82, 93, 100, 114, 118, 120, 122], "embedding_dim": [93, 114], "empti": 75, "en": 149, "enabl": [0, 3, 91, 109, 150, 153], "enable_edge_transform": [84, 99], "encod": [83, 99, 107, 123, 126], "encount": 149, "encourag": [146, 149], "end": [0, 1, 5, 14, 110, 125, 149, 150, 153], "energi": [4, 119, 120, 129, 148, 149, 152], "energy_cascad": [4, 119], "energy_cascade_pr": 119, "energy_pr": 119, "energy_reco": 77, "energy_sigma": 119, "energy_track": [4, 119], "energy_track_pr": 119, "energyreconstruct": [117, 119, 149, 154], "energyreconstructionwithpow": [117, 119], "energyreconstructionwithuncertainti": [117, 119, 149], "energytcreconstruct": [117, 119], "engin": [0, 150, 153], "enough": 111, "ensemble_dataset": [148, 149], "ensembledataset": [10, 11, 135, 148, 149], "ensembleloss": [124, 127], "ensur": [37, 58, 127, 143, 146, 154], "entir": [11, 13, 111, 147, 149, 154], "entiti": [149, 154], "entri": [75, 77, 95, 101, 123, 131, 152], "entropi": 127, "enum": 37, "env": 151, "environ": [50, 151], "ep": [144, 149, 154], "epoch": [115, 125, 131], "eps_lik": [130, 144], "equival": [37, 149, 154], "erda": [5, 66], "erdahost": 68, "erdahosteddataset": [3, 5, 66, 68], "error": [127, 143, 146, 147, 149], "especi": 75, "establish": 154, "estim": 123, "etc": [0, 14, 127, 143, 148, 149, 150, 152, 153], "eth": 123, "euclidean": [104, 123, 146], "euclideandistanceloss": [124, 127], "euclideanedg": [103, 104], "european": [0, 150, 153], "eval": [111, 151], "evalu": [5, 112, 120], "even": 58, "event": [0, 1, 5, 7, 9, 11, 13, 14, 16, 18, 28, 31, 43, 45, 47, 55, 59, 60, 63, 64, 66, 67, 68, 75, 83, 85, 93, 106, 109, 110, 116, 120, 122, 123, 126, 127, 128, 129, 135, 147, 149, 150, 152, 153, 154], "event_no": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 129, 135, 148, 149, 154], "event_tim": 4, "event_truth": 5, "eventid": 4, "events_per_batch": 63, "everi": [101, 112, 147, 149, 152], "everyth": [149, 154], "everytim": 146, "exact": [96, 127, 154], "exactli": [123, 127, 143, 148], "exampl": [7, 14, 34, 60, 81, 85, 110, 112, 123, 127, 135, 136, 147, 148, 151], "example_energy_reconstruction_model": [131, 149, 154], "exce": 129, "exceed": 64, "except": [1, 145, 147], "exclud": 23, "exclude_kei": 23, "excluding_valu": 123, "execut": 59, "exist": [0, 11, 13, 16, 59, 80, 112, 126, 135, 148, 149, 150, 153, 154], "exist_ok": [149, 154], "expand": [0, 149, 150, 153], "expans": 100, "expect": [59, 60, 62, 75, 77, 106, 109, 148, 149, 154], "expects_merged_datafram": 62, "experi": [0, 1, 5, 6, 7, 48, 49, 71, 124, 147, 149, 150, 153], "experiment": 154, "expert": 1, "explain": 149, "explicitli": [128, 133, 138], "exponenti": 127, "export": [147, 148, 149, 152, 154], "expos": 1, "express": [14, 111, 127], "extend": [0, 1, 31, 147, 148, 150, 153], "extend_boundari": 31, "extens": [1, 5, 49, 62, 141], "extern": [148, 149], "extra": [84, 107, 154], "extra_repr": [84, 111], "extra_repr_recurs": 111, "extracor_nam": 49, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 41, 42, 43, 58, 75, 77, 120, 123, 147, 149, 152], "extractor": [1, 3, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 55, 75, 77], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 43, 147, 152], "f": [85, 147, 149, 154], "f1": 85, "f2": 85, "f_absorpt": 110, "f_scatter": 110, "factor": [84, 110, 123, 125, 127, 149, 154], "fail": 18, "fals": [14, 36, 75, 83, 84, 95, 99, 100, 101, 106, 107, 109, 111, 122, 123, 125, 127, 129, 149, 154], "fanci": 149, "fashion": 1, "fast": [0, 148, 149, 150, 153], "faster": [0, 147, 148, 150, 153], "favorit": 151, "favourit": 149, "fbeezabg5a": 5, "fc": [84, 85], "featur": [1, 3, 4, 5, 11, 13, 16, 22, 64, 66, 67, 68, 75, 77, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 118, 122, 123, 128, 135, 146, 148, 149, 152, 154], "feature_idx": 110, "feature_map": [87, 88, 89, 90, 152], "feature_nam": 110, "features_subset": [84, 93, 95, 97, 101, 114, 149, 154], "feedforward": 84, "feel": 149, "fetch": 131, "few": [0, 80, 146, 147, 148, 149, 150, 153, 154], "fiber_id": 89, "field": [107, 112, 123, 126, 133, 138, 140, 147, 148, 149, 152], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 14, 16, 19, 21, 31, 34, 36, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 62, 63, 64, 70, 71, 73, 75, 76, 77, 106, 111, 125, 127, 128, 131, 132, 133, 134, 135, 136, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154], "file_extens": 62, "file_handl": 143, "file_loc": 67, "file_path": [128, 147, 152], "file_read": [7, 147, 152], "filehandl": 143, "filenam": 141, "fileread": [19, 49], "files_list": 58, "filesi": [1, 130], "fill": [5, 14, 83], "fill_valu": [83, 99], "filter": [36, 45, 47, 50, 55, 143, 152], "filter_ani": 36, "filter_nam": 36, "filtermask": 36, "final": [0, 7, 85, 125, 135, 148, 149, 150, 153], "find": [21, 31, 105, 141, 148, 149, 152, 154], "find_fil": [49, 50, 51, 52, 53, 147], "find_i3_fil": [130, 141], "first": [83, 93, 105, 109, 114, 125, 128, 146, 149, 152], "fisher": 127, "fit": [9, 14, 91, 127, 129, 138, 149, 154], "fit_weight": 129, "five": [107, 148], "fix": [60, 149], "flag": [22, 75], "flake8": 146, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flexibil": 154, "flexibl": 60, "float": [11, 13, 16, 31, 75, 83, 84, 91, 93, 94, 99, 101, 104, 105, 106, 107, 109, 110, 114, 120, 125, 127, 128, 129, 135, 148], "float32": [11, 13, 16, 106, 107], "float64": 127, "flow": [112, 120, 154], "flow_lay": [112, 120], "flowchart": [0, 150, 153], "fly": [148, 149], "fn": [11, 37, 133, 137], "fn_kwarg": 137, "folder": [45, 47, 50, 51, 52, 53, 55, 70, 147], "folk": 149, "follow": [14, 91, 95, 101, 112, 116, 127, 129, 146, 147, 148, 149], "fork": 146, "form": [0, 19, 80, 99, 118, 133, 138, 147, 148, 150, 153, 154], "format": [0, 1, 3, 5, 7, 11, 34, 38, 39, 49, 51, 62, 63, 64, 83, 111, 114, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154], "forward": [81, 83, 84, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 109, 112, 114, 116, 120, 122, 127, 154], "found": [37, 45, 47, 50, 55, 63, 67, 110, 127, 148, 149], "four": 83, "fourier": 83, "fourierencod": [82, 83, 100, 122], "fraction": [94, 114, 128], "frame": [20, 21, 23, 31, 33, 36, 37, 77], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 149, 150, 153], "free": [0, 14, 127, 149, 150, 153], "freeli": 149, "frequenc": 83, "friendli": [0, 62, 64, 147, 149, 150, 151, 153], "from": [0, 1, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 41, 42, 43, 49, 50, 52, 53, 57, 62, 64, 66, 67, 68, 83, 85, 87, 88, 89, 90, 97, 100, 104, 106, 107, 109, 110, 111, 112, 115, 118, 119, 120, 123, 125, 126, 127, 133, 134, 136, 138, 143, 146, 147, 148, 149, 150, 152, 153, 154], "from_config": [11, 111, 134, 135, 136, 148, 149, 154], "from_dataset_config": [8, 149, 154], "full": [63, 123, 149, 154], "full_edge_index": [80, 123], "fulli": [83, 99, 147, 149, 154], "func": 149, "function": [0, 7, 8, 11, 14, 21, 37, 39, 43, 58, 59, 75, 77, 81, 84, 85, 87, 88, 89, 90, 95, 99, 101, 106, 110, 111, 112, 120, 123, 127, 128, 130, 135, 136, 137, 140, 141, 142, 144, 148, 150, 152, 153, 154], "fund": [0, 150, 153], "furnish": [14, 127], "further": [75, 110], "furthermor": 114, "g": [1, 5, 11, 13, 16, 18, 19, 21, 31, 34, 37, 59, 60, 64, 75, 77, 84, 85, 99, 106, 109, 110, 120, 123, 127, 129, 143, 146, 148, 149, 151, 154], "galatict": 24, "gamma_1": 84, "gamma_2": 84, "gather": [14, 110], "gather_cluster_sequ": [102, 110], "gather_len_matched_bucket": [10, 14], "gaussian": 123, "gcd": [21, 31, 35, 45, 47, 50, 55, 58, 73, 75, 76, 77, 141], "gcd_dict": [35, 37], "gcd_file": [6, 21, 31, 73, 75, 76, 77], "gcd_list": [58, 141], "gcd_rescu": [45, 47, 50, 55, 141], "gcd_shuffl": 58, "gelu": 84, "gener": [0, 5, 9, 11, 13, 14, 16, 23, 36, 49, 62, 66, 70, 75, 76, 77, 83, 102, 103, 106, 107, 108, 110, 118, 127, 129, 148, 149, 150, 152, 153, 154], "geometr": 149, "geometri": [66, 87, 106, 154], "geometry_t": [87, 88, 89, 90, 152], "geometry_table_path": [88, 89, 90, 152], "germani": [0, 150, 153], "get": [19, 35, 59, 87, 110, 125, 128, 149, 154], "get_all_argument_valu": [132, 133], "get_all_grapnet_class": [132, 137], "get_field": [80, 123], "get_graphnet_class": [132, 137], "get_lr": 125, "get_map_funct": 7, "get_member_vari": [33, 37], "get_metr": 125, "get_om_keys_and_pulseseri": [33, 35], "get_predict": [124, 128], "get_primary_kei": [56, 59], "get_rw_landing_prob": [80, 123], "gev": 66, "gframe": [21, 31], "gggt": [112, 120], "git": 151, "github": [14, 83, 84, 99, 100, 112, 120, 122, 123, 127, 149, 151], "given": [5, 11, 14, 16, 21, 31, 64, 66, 67, 68, 83, 85, 104, 120, 123, 127, 129, 131, 148, 152], "glob": 147, "global": [2, 4, 93, 95, 97, 101, 111, 149], "global_index": 7, "global_pooling_schem": [93, 95, 97, 101, 149, 154], "gnlabelcascadeenergydeposit": 4, "gnlabelcascadeenergydepositedprimari": 4, "gnlabelenergydepositedprimari": 4, "gnlabelenergydepositedtot": 4, "gnlabelenergyprimari": 4, "gnlabelhighestedaughterdist": 4, "gnlabelhighestedaughterefract": 4, "gnlabelhighesteiniceparticledist": 4, "gnlabelhighesteiniceparticleefract": 4, "gnlabelhighesteiniceparticleeonentr": 4, "gnlabelhighesteiniceparticleischild": 4, "gnlabeltrackenergydeposit": 4, "gnlabeltrackenergydepositedprimari": 4, "gnlabeltrackenergyonentr": 4, "gnlabeltrackenergyonentranceprimari": 4, "gnn": [1, 72, 80, 93, 94, 95, 96, 97, 99, 100, 101, 106, 112, 114, 122, 149, 154], "go": [14, 146, 149], "googl": 146, "got": 147, "gpu": [91, 131, 149, 151, 154], "grab": 120, "grad_output": 127, "gradient_clip_v": 91, "grant": [0, 14, 127, 150, 153], "graph": [0, 1, 8, 11, 13, 16, 80, 83, 84, 85, 87, 99, 103, 104, 105, 106, 108, 109, 110, 114, 123, 126, 128, 146, 148, 149, 150, 153, 154], "graph_definit": [5, 11, 13, 16, 66, 67, 68, 80, 102, 112, 128, 135, 148, 149, 154], "graph_definiton": 148, "graphdefinit": [5, 11, 13, 16, 66, 67, 68, 102, 103, 106, 107, 108, 112, 128, 146, 148, 149], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154], "graphnet_file_read": [3, 48, 147, 152], "graphnet_model": 125, "graphnet_modul": 73, "graphnet_writ": [3, 61], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [124, 125], "graphnetfileread": [7, 48, 49, 50, 51, 52, 53, 147], "graphnetfilesavemethod": [62, 64], "graphneti3deploy": [72, 73], "graphnetwrit": [7, 61, 62, 63, 64, 147], "grapnet": [137, 149], "greatli": [149, 154], "grit": [80, 83, 84, 92, 123], "grit_lay": 84, "grit_model": 99, "gritsparsemha": [82, 84], "grittransformerlay": [82, 84], "group": [0, 14, 85, 149, 150, 153], "group_bi": [82, 85], "group_pulses_to_dom": [82, 85], "group_pulses_to_pmt": [82, 85], "groupbi": 85, "guarante": [149, 154], "guid": 146, "guidelin": 146, "gvd": [66, 90], "gz": 5, "h5": [41, 52, 147], "h5_extractor": [17, 40], "h5extractor": [7, 40, 41, 49, 147], "h5hitextractor": [40, 41, 147], "h5py": 147, "h5truthextractor": [40, 41, 147], "ha": [0, 5, 37, 59, 73, 75, 94, 110, 127, 141, 147, 148, 149, 150, 151, 152, 153, 154], "had": 152, "hadron": 119, "hand": [23, 148, 149], "handi": 58, "handl": [23, 127, 131, 140, 143, 147, 148, 149], "handler": 143, "happen": [110, 129, 148, 152], "hard": [31, 109], "has_extens": [130, 141], "has_icecube_packag": [130, 142], "has_jammy_flows_packag": [130, 142], "has_torch_packag": [130, 142], "have": [1, 5, 13, 23, 45, 47, 50, 55, 59, 60, 64, 85, 100, 106, 110, 120, 146, 148, 149, 152, 154], "head": [84, 93, 97, 99, 100, 120, 122, 154], "head_dim": 84, "head_siz": 100, "heavi": 147, "height": 123, "help": [75, 77, 131, 146, 148, 149, 152, 154], "here": [106, 146, 148, 149, 151, 152, 154], "herebi": [14, 127], "hidden": [83, 84, 93, 95, 96, 99, 101, 114], "hidden_dim": [99, 100, 122], "hidden_featur": 84, "hidden_s": [114, 118, 119, 120, 149, 154], "high": [0, 149, 150, 153], "higher": 148, "highest_protocol": 147, "hint": 146, "hit": [8, 128, 148, 149, 152], "hitdata": 41, "hlc": [4, 109], "hlc_name": 109, "hold": [106, 110, 147, 152, 154], "holder": [14, 127], "home": [88, 89, 90, 131, 147, 152], "homogenized_qtot": 4, "homophili": 123, "hook": 146, "horizon": [0, 150, 153], "host": [5, 66, 67, 152], "how": [5, 14, 102, 103, 108, 147, 149, 154], "howev": [45, 47, 50, 55, 148, 149], "html": [112, 120, 149], "http": [5, 14, 67, 83, 84, 99, 100, 101, 104, 112, 120, 122, 123, 127, 146, 149, 151], "hull": 31, "human": 149, "hybrid": 24, "hyperparamet": [136, 149, 154], "i": [0, 1, 5, 9, 11, 13, 14, 16, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 43, 45, 47, 50, 55, 58, 59, 60, 63, 64, 67, 70, 73, 75, 76, 77, 81, 83, 84, 85, 94, 95, 99, 100, 101, 104, 106, 107, 109, 110, 112, 114, 116, 119, 120, 123, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154], "i3": [1, 21, 31, 35, 36, 37, 45, 47, 50, 55, 58, 70, 75, 77, 141, 149, 151], "i3_fil": [6, 21, 31], "i3_filt": [20, 33, 45, 47, 50, 55], "i3_list": [58, 141], "i3_shuffl": 58, "i3calibr": 35, "i3deploy": [6, 69, 73, 74], "i3extractor": [7, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 47, 49, 55], "i3featureextractor": [4, 17, 20, 75, 77], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6, 49, 50], "i3filt": [33, 36, 45, 47, 50, 55], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 75, 77], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [73, 74, 75, 76, 77], "i3mctre": 31, "i3modul": [1, 69, 71, 73], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [74, 75], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 45, 47, 48, 55], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3toparquetconvert": [45, 46, 47], "i3tosqliteconvert": [46, 47, 55], "i3truthextractor": [4, 17, 20], "i3tumextractor": [17, 20], "ic": [97, 100, 109], "ice_arg": 109, "ice_transpar": [102, 110], "icecub": [1, 3, 5, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 45, 47, 50, 55, 67, 69, 72, 75, 76, 77, 80, 84, 86, 97, 100, 109, 110, 142, 149, 154], "icecube86": [4, 86, 88, 90], "icecube86prometheu": [86, 90], "icecube_deepcor": 90, "icecube_gen2": 90, "icecube_upgrad": [88, 90], "icecubedeepcor": [86, 88], "icecubedeepcore8": [86, 90], "icecubegen2": [86, 90], "icecubehosteddataset": [3, 5, 67], "icecubekaggl": [86, 88], "icecubeupgrad": [86, 88], "icecubeupgrade7": [86, 90], "icedemo81": [86, 90], "icemix": [80, 92], "icemixnod": [108, 109], "icetrai": [35, 37, 45, 47, 50, 55, 71, 72, 142, 151], "icetray_verbos": [45, 47, 50, 55], "id": [5, 7, 9, 13, 45, 47, 55, 64, 87, 106, 128, 147, 148, 149, 152], "id_column": 109, "ideal": 154, "ident": [85, 87, 88, 89, 90, 107, 120, 123], "identifi": [7, 11, 13, 16, 31, 109, 110, 123, 135, 136, 152], "identify_indic": [102, 110], "identitytask": [117, 118, 120], "ie": 93, "ignor": [11, 13, 16, 37, 63, 123], "illustr": [0, 146, 147, 150, 153], "imag": [0, 1, 146, 149, 150, 153, 154], "impact": 100, "implement": [1, 5, 14, 19, 21, 49, 62, 71, 76, 84, 93, 94, 95, 96, 97, 99, 100, 101, 104, 114, 122, 123, 127, 146, 147, 149, 154], "impli": [14, 127], "import": [0, 1, 5, 59, 80, 130, 147, 148, 149, 150, 152, 153, 154], "impos": [11, 13, 91], "improv": [0, 1, 131, 149, 150, 153, 154], "in_dim": 84, "in_featur": 84, "inaccur": 110, "inact": 106, "includ": [1, 5, 13, 14, 66, 67, 68, 84, 91, 109, 127, 133, 146, 148, 149, 152, 154], "include_dynedg": 100, "incom": 107, "incompat": 149, "incomplet": 14, "incorpor": 83, "increas": [0, 125, 150, 153], "indent": 111, "independ": [70, 73, 76, 147], "index": [1, 7, 11, 13, 16, 37, 59, 63, 67, 85, 87, 93, 105, 110, 114, 123, 125, 148, 149, 154], "index_column": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 128, 129, 135, 148, 149], "indic": [14, 60, 79, 85, 93, 105, 107, 110, 114, 120, 123, 125, 127, 131, 146, 149, 154], "indicesfor": 35, "indici": [11, 13, 16, 35, 60], "individu": [0, 11, 13, 16, 85, 95, 123, 148, 150, 153, 154], "induct": 99, "industri": [0, 3, 150, 153], "inelast": [4, 119], "inelasticity_pr": 119, "inelasticityreconstruct": [117, 119], "inf": 123, "infer": [0, 1, 64, 69, 71, 72, 75, 77, 91, 120, 149, 150, 153], "inference_modul": [69, 74], "info": [143, 149], "inform": [5, 11, 13, 16, 18, 19, 21, 23, 31, 39, 41, 43, 66, 67, 68, 106, 109, 110, 111, 147, 148, 149, 152, 154], "ingest": [0, 1, 3, 86, 150, 153], "inherit": [5, 19, 21, 37, 49, 62, 87, 109, 127, 143, 147, 148, 149, 154], "init_fn": [135, 136], "init_global_index": [3, 7], "init_predict_tqdm": 125, "init_test_tqdm": 125, "init_train_tqdm": 125, "init_validation_tqdm": 125, "init_valu": 84, "initi": [7, 36, 50, 64, 70, 73, 76, 84, 93, 100, 105, 110], "initial_st": 43, "initialis": [136, 149, 154], "injection_azimuth": [4, 148, 149], "injection_bjorkeni": [4, 148, 149], "injection_bjorkenx": [4, 148, 149], "injection_column_depth": [4, 148, 149], "injection_energi": [4, 148, 149], "injection_interaction_typ": [4, 148, 149], "injection_position_i": [4, 148, 149], "injection_position_x": [4, 148, 149], "injection_position_z": [4, 148, 149], "injection_typ": [4, 148, 149], "injection_zenith": [4, 148, 149, 154], "innov": [0, 150, 153], "inptut": 110, "input": [5, 7, 11, 13, 16, 45, 47, 49, 50, 55, 62, 66, 67, 68, 70, 73, 75, 76, 77, 83, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 109, 110, 112, 114, 118, 120, 122, 123, 133, 138, 140, 147, 148, 149, 152, 154], "input_dim": [84, 154], "input_dir": [147, 152], "input_featur": [87, 106, 107], "input_feature_nam": [87, 106, 107, 109], "input_fil": [49, 70], "input_nam": 110, "ins": 87, "insert": 110, "insid": 148, "inspect": [149, 154], "inspir": [101, 123], "instal": [146, 149], "instanc": [11, 19, 21, 31, 37, 39, 41, 43, 45, 47, 50, 55, 106, 111, 126, 128, 134, 136, 147, 148, 149, 154], "instanti": [7, 9, 136, 147, 148, 152], "instead": [21, 31, 45, 47, 50, 55, 73, 112, 127, 149, 154], "int": [5, 7, 8, 9, 11, 13, 14, 16, 25, 28, 36, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 67, 70, 73, 76, 83, 84, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 128, 129, 131, 135, 138, 143, 147, 154], "integ": [59, 93, 95, 96, 101, 127, 148, 149], "integer_primary_kei": 59, "integr": 154, "intend": [93, 114, 149], "interact": [119, 126, 148, 149], "interaction_kei": 126, "interaction_tim": [4, 119], "interaction_time_pr": 119, "interaction_typ": [4, 126], "interchang": [149, 154], "interfac": [0, 135, 136, 149, 150, 151, 152, 153], "interim": [7, 61, 62, 63, 64, 147], "intermedi": [0, 1, 3, 7, 11, 94, 149, 150, 153], "intern": [3, 17, 39, 47, 51], "internal_parquet_read": [3, 48], "interpol": [110, 125], "interpret": 118, "interv": [83, 149, 154], "intract": 148, "introduc": 149, "introduct": [112, 120], "intuit": [143, 154], "invers": 120, "invert": 120, "involv": 60, "io": [112, 120, 146, 149], "iop": 149, "iopscienc": 149, "is_bad_dom": 4, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_bright_dom": 4, "is_errata_dom": 4, "is_gcd_fil": [130, 141], "is_graphnet_class": [132, 137], "is_graphnet_modul": [132, 137], "is_i3_fil": [130, 141], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_saturated_dom": 4, "is_typ": [33, 37], "iseecub": [80, 121], "isinst": 147, "isn": 37, "isol": 107, "issu": [149, 154], "iter": 11, "its": [37, 114, 148, 149, 154], "itself": [37, 120, 147, 149, 154], "iv": 127, "jammy_flow": [112, 120, 142], "job": 152, "join": [147, 149], "json": [34, 135, 148, 149], "just": [5, 85, 147, 148, 149, 154], "k": [84, 93, 95, 97, 101, 104, 107, 114, 123, 127], "kaggl": [4, 83, 84, 88, 97, 100], "kappa": [119, 127], "kappa_switch": 127, "karg": [111, 115], "keep": [19, 21, 36, 39, 41, 43, 109, 147], "kei": [11, 23, 34, 35, 37, 59, 64, 84, 85, 109, 126, 135, 136, 147, 148, 149, 152], "kept": 36, "key_padding_mask": 84, "keyword": [125, 133, 138], "kind": [14, 127, 152], "km3net": [149, 154], "knn": 107, "knn_graph_batch": [80, 123], "knndistanceedg": [103, 104], "knnedg": [103, 104], "knngraph": [102, 107, 148, 149, 154], "knngraphrrwp": [102, 107], "knngraphrws": [102, 107], "know": 152, "known": 85, "kstep": [99, 123], "kv": 84, "kwarg": [7, 8, 11, 13, 16, 36, 49, 51, 52, 53, 62, 81, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 125, 127, 129, 133, 135, 136, 143], "l": [84, 110, 123], "l3_oscnext_bool": 4, "l4_oscnext_bool": 4, "l5_oscnext_bool": 4, "l6_oscnext_bool": 4, "l7_oscnext_bool": 4, "label": [1, 11, 13, 16, 25, 28, 91, 94, 106, 116, 120, 124, 128, 135], "lai": 149, "lambda": [111, 149, 154], "land": [123, 149], "larg": [0, 93, 127, 148, 150, 153], "larger": 147, "largest": 110, "last": [14, 95, 101, 114, 118, 119, 120, 125, 128, 154], "last_epoch": 125, "lastli": 152, "latent": [83, 93, 95, 97, 100, 101, 112, 114, 118, 119, 120, 122, 154], "latest": 149, "layer": [0, 80, 82, 83, 85, 93, 94, 95, 96, 97, 99, 100, 101, 112, 114, 118, 119, 120, 150, 153], "layer_s": 84, "layer_size_scal": 96, "layernorm": [84, 99], "ldot": [81, 85], "lead": [148, 149], "learn": [0, 1, 5, 62, 64, 75, 77, 112, 116, 118, 120, 125, 147, 149, 150, 151, 152, 153, 154], "learnabl": [84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 114, 120, 122, 154], "learnedtask": [117, 120], "least": [13, 146, 148, 149], "leav": 125, "len": [11, 13, 110, 123, 147, 148], "length": [11, 13, 14, 37, 109, 110, 123, 125], "lenmatchbatchsampl": [10, 14], "less": [8, 128, 149, 154], "let": [149, 152, 154], "level": [0, 5, 11, 13, 16, 18, 31, 36, 43, 45, 47, 49, 50, 51, 52, 53, 55, 59, 62, 63, 66, 67, 68, 81, 85, 100, 116, 143, 148, 149, 150, 152, 153], "leverag": 1, "lex_sort": [102, 110], "liabil": [14, 127], "liabl": [14, 127], "liamma": [83, 84, 99, 123], "lib": [88, 89, 90, 131], "licens": [14, 127], "lift": 147, "light": 105, "lightn": [9, 125, 149, 154], "lightningdatamodul": 9, "lightningmodul": [83, 84, 111, 125, 143, 149, 154], "liheng": 99, "like": [14, 19, 37, 85, 105, 112, 120, 123, 127, 144, 146, 148, 149, 151, 154], "limit": [14, 109, 127], "line": [125, 131, 147, 148, 152], "linear": [83, 84, 95, 101, 110, 154], "linearedgeencod": [82, 83], "linearli": 125, "linearnodeencod": [82, 83], "liquid": 89, "liquido": [3, 4, 17, 41, 52, 80, 86, 147], "liquido_read": [3, 48], "liquido_v1": [86, 89], "liquidoread": [48, 52, 147], "list": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 23, 31, 34, 36, 37, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 84, 85, 87, 88, 89, 90, 91, 93, 95, 97, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 120, 123, 125, 127, 128, 129, 135, 137, 138, 141, 143, 147, 148, 152], "list_all_submodul": [132, 137], "ljvmiranda921": 146, "load": [0, 8, 11, 58, 71, 111, 115, 133, 135, 148, 149, 150, 152, 153], "load_from_checkpoint": [149, 154], "load_modul": [10, 11, 111], "load_state_dict": [111, 115, 149, 154], "loaded_model": [149, 154], "local": [81, 88, 89, 90, 109, 131, 149, 151, 154], "locat": 110, "lock": 13, "log": [0, 1, 119, 124, 125, 127, 130, 148, 149, 150, 153, 154], "log10": [120, 129, 149, 154], "log_cmk": 127, "log_cmk_approx": 127, "log_cmk_exact": 127, "log_every_n_step": [91, 149, 154], "log_fold": [36, 49, 51, 52, 53, 62, 143], "log_model": [149, 154], "logcmk": [124, 127], "logcoshloss": [124, 127, 149, 154], "logger": [7, 9, 11, 14, 19, 36, 49, 51, 52, 53, 60, 62, 70, 71, 91, 104, 111, 126, 129, 130, 143, 149, 154], "loggeradapt": 143, "logic": 148, "logit": [118, 127, 154], "logrecord": 143, "long": 148, "longer": 109, "longev": [0, 150, 153], "longtensor": [81, 85, 123], "look": [23, 148, 149], "lookup": 137, "loop": [83, 123, 149, 154], "loss": [11, 13, 16, 91, 106, 112, 116, 120, 125, 127, 131, 149, 154], "loss_factor": 127, "loss_funct": [1, 120, 124, 149, 154], "loss_weight": [106, 120, 149, 154], "loss_weight_column": [11, 13, 16, 106, 128, 135], "loss_weight_default_valu": [11, 13, 16, 106, 135], "loss_weight_t": [11, 13, 16, 128, 135], "lossfunct": [120, 124, 127, 149], "lot": 146, "lower": [0, 149, 150, 153], "lr": [149, 154], "m": [105, 110, 127], "ma": 99, "machin": 1, "made": [149, 154], "maeloss": [124, 127], "magnitud": [0, 150, 153], "mai": [49, 60, 71, 109, 120, 148, 149, 151, 154], "main": [1, 14, 83, 84, 92, 99, 123, 146, 149], "mainli": 37, "major": [116, 120], "make": [0, 7, 109, 129, 135, 136, 146, 147, 148, 149, 150, 152, 153, 154], "make_dataload": [124, 128], "make_train_validation_dataload": [124, 128], "makedir": [149, 154], "manag": [0, 124, 147, 149, 150, 153], "mandatori": 83, "mangl": 37, "mani": [64, 147, 149, 154], "manipul": [34, 102, 103, 108], "map": [7, 11, 13, 16, 22, 23, 59, 88, 89, 90, 106, 107, 120, 149, 152, 154], "mari": [0, 150, 153], "martin": 94, "mask": [14, 106, 123], "masked_entri": 123, "master": 127, "match": [14, 49, 106, 129, 141, 144, 147], "math": [1, 84, 130], "mathbb": 85, "mathbf": [81, 85], "matic": 120, "matric": [84, 123], "matrix": [84, 85, 99, 104, 105, 110, 123, 127, 148], "max": [81, 84, 95, 97, 101, 127, 129, 131, 149, 154], "max_activ": 109, "max_epoch": [91, 149, 154], "max_length": 109, "max_pool": [81, 85], "max_pool_x": [81, 85], "max_puls": 109, "max_rel_po": 122, "max_table_s": 64, "max_weight": 129, "maximum": [64, 85, 109, 110, 120, 122, 131], "mc": [23, 59], "mc_truth": [19, 43, 148, 149], "mclabelbgmuonmcp": 4, "mclabelbgmuonmcpecharg": 4, "mclabelclassif": 4, "mclabelcoincidentmuon": 4, "mctree": [31, 35], "md": 149, "mean": [0, 11, 13, 16, 80, 84, 95, 97, 99, 101, 110, 123, 127, 136, 147, 148, 149, 150, 153, 154], "meaning": 83, "meant": [147, 149, 154], "measur": [109, 110, 123, 149, 152], "mechan": 84, "meet": 120, "member": [21, 23, 31, 37, 49, 109, 135, 136, 143, 147, 152], "memori": [13, 148], "mention": 149, "merchant": [14, 127], "merg": [7, 14, 62, 63, 64, 127, 147, 148, 152], "merge_fil": [7, 62, 63, 64, 147, 152], "merged_database_nam": 64, "messag": [84, 99, 125, 143, 149], "messagepass": 84, "metaclass": [135, 136], "metaproject": 151, "meter": 149, "meth": 149, "method": [5, 7, 9, 11, 13, 14, 16, 19, 21, 31, 33, 34, 35, 37, 44, 45, 49, 54, 55, 62, 63, 64, 66, 67, 68, 71, 73, 84, 85, 87, 99, 100, 110, 119, 127, 129, 147, 149, 154], "metric": [93, 95, 97, 101, 105, 114, 125, 149, 154], "mha": [84, 99], "might": [148, 149, 154], "mileston": [125, 149, 154], "million": [64, 66], "min": [81, 85, 95, 97, 101, 129, 149, 154], "min_pool": [81, 82, 85], "min_pool_x": [81, 82, 85], "mind": 149, "minh": 94, "mini": 128, "minim": [91, 112, 148, 149, 152, 154], "minimum": [109, 120], "minkowski": [102, 103], "minkowskiknnedg": [103, 105], "minu": 127, "mise": 127, "miss": 79, "mit": [14, 127], "mix": 18, "ml": [0, 1, 150, 153], "mlp": [82, 83, 84, 95, 100, 101, 122, 154], "mlp_dim": [83, 122], "mlp_ratio": [84, 100], "mode": [91, 120], "model": [0, 1, 5, 69, 71, 72, 75, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 133, 135, 136, 138, 145, 147, 148, 150, 151, 152, 153], "model_config": [71, 75, 77, 130, 132, 133, 135, 138, 149, 154], "model_config_path": [149, 154], "model_nam": [75, 77], "modelconfig": [71, 75, 77, 111, 132, 135, 136], "modelconfigsav": 136, "modelconfigsaverabc": [132, 136], "modelconfigsavermeta": [132, 136], "modif": [149, 154], "modifi": [14, 127, 149, 154], "modul": [0, 3, 6, 7, 11, 17, 18, 37, 38, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 76, 79, 80, 83, 84, 86, 92, 99, 102, 103, 105, 106, 107, 108, 111, 113, 117, 121, 124, 130, 132, 135, 136, 137, 138, 142, 147, 149, 150, 153, 154], "modular": [0, 80, 147, 149, 150, 153, 154], "moduletyp": 137, "momentum": 84, "mont": 35, "more": [1, 11, 13, 14, 58, 59, 67, 93, 111, 135, 136, 143, 148, 149, 154], "most": [0, 1, 60, 105, 120, 147, 150, 152, 153, 154], "mryab": 127, "mseloss": [124, 127], "msg": 143, "mulitpli": 127, "multi": [84, 95, 101, 116], "multiclassclassificationtask": [117, 118, 149], "multiheadattent": [14, 84], "multiindex": 152, "multipl": [11, 13, 16, 18, 83, 110, 125, 127, 135, 143, 154], "multipli": [84, 125], "multiprocess": [7, 14, 45, 47, 55, 147], "multiprocessing_context": [13, 14], "muon": [25, 148, 154], "muonfilter_13": 4, "must": [13, 18, 49, 50, 59, 62, 81, 84, 125, 127, 129, 146, 147, 148, 149, 152], "my": [148, 149, 152], "my_custom_label": [148, 149], "my_databas": 64, "my_fil": [147, 152], "my_geometry_t": 152, "my_outdir": [147, 152], "my_tabl": 152, "mycustomlabel": [148, 149], "mydetector": 152, "myexperi": 152, "myextractor": 152, "mygraphnetmodel": 154, "mymodel": 154, "mypi": 146, "mypicklewrit": 147, "myread": 152, "n": [14, 19, 81, 85, 105, 123, 127, 148, 149, 152], "n_1": 85, "n_b": 85, "n_cluster": 110, "n_event": [147, 152], "n_featur": [83, 100, 122], "n_freq": 83, "n_head": [84, 93, 97, 99], "n_layer": 99, "n_pmt": 110, "n_puls": [109, 152], "n_rel": 100, "n_worker": [70, 73, 76], "name": [4, 5, 7, 8, 11, 13, 16, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 43, 45, 47, 49, 51, 52, 53, 55, 59, 62, 63, 64, 71, 75, 77, 83, 87, 88, 89, 90, 106, 107, 109, 110, 112, 114, 120, 123, 126, 129, 131, 133, 135, 136, 137, 138, 143, 146, 147, 148, 149, 152, 154], "namespac": [4, 111, 135, 136], "nan": 110, "narg": 131, "nb_dom": 123, "nb_file": 7, "nb_input": [93, 94, 95, 96, 97, 98, 99, 101, 114, 118, 119, 120, 149, 154], "nb_intermedi": 94, "nb_nearest_neighbour": [104, 105, 107, 148, 149, 154], "nb_neighbor": 84, "nb_neighbour": [93, 95, 97, 101, 114, 149, 154], "nb_output": [94, 96, 98, 99, 109, 118, 119, 120, 149, 154], "nb_repeats_allow": 143, "ndarrai": [11, 13, 31, 106, 107, 110, 129, 147], "nearest": [93, 95, 97, 101, 104, 105, 107, 114, 123, 149, 154], "nearli": 154, "necessari": [0, 9, 34, 146, 150, 153], "need": [0, 5, 9, 34, 64, 80, 83, 111, 114, 127, 140, 147, 148, 149, 150, 151, 152, 153, 154], "negat": 85, "neighbour": [84, 93, 95, 97, 101, 104, 105, 107, 114, 123, 149, 154], "nest": 34, "nester": 34, "network": [1, 84, 94, 99, 113, 154], "neural": [1, 113, 154], "neutrino": [0, 1, 21, 43, 50, 84, 97, 100, 110, 122, 148, 149, 150, 152, 153, 154], "new": [0, 1, 18, 84, 109, 133, 138, 146, 147, 149, 150, 153, 154], "new_features_nam": 109, "new_phras": 140, "nfdi": [0, 150, 153], "nn": [0, 80, 83, 84, 99, 104, 107, 150, 153, 154], "no_weight_decai": 100, "node": [11, 13, 16, 80, 81, 83, 84, 85, 93, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 114, 123, 148, 149, 154], "node_definit": [106, 107, 148, 149, 154], "node_feature_nam": [109, 148, 149, 154], "node_level": 128, "node_rnn": [80, 93, 113], "node_truth": [11, 13, 16, 128, 135], "node_truth_t": [11, 13, 16, 128, 135, 149], "nodeasdomtimeseri": [108, 109], "nodedefinit": [106, 107, 108, 109, 149, 154], "nodesaspuls": [106, 108, 109, 148, 149, 154], "nodetimernn": 114, "nois": [22, 35, 75, 149], "non": [9, 34, 37, 59, 93, 107, 120, 127, 149], "none": [5, 7, 8, 9, 11, 13, 14, 16, 21, 23, 31, 35, 36, 37, 45, 47, 49, 50, 51, 52, 53, 55, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 77, 84, 85, 87, 88, 89, 90, 91, 93, 95, 97, 100, 101, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 120, 123, 125, 127, 128, 129, 131, 133, 134, 135, 137, 141, 143, 147, 148, 149, 152, 154], "noninfring": [14, 127], "nope": 99, "norm": [84, 99], "norm_edg": [84, 99], "norm_lay": [83, 84], "normal": [83, 84, 95, 99, 101, 110, 112, 120, 152], "normalizing_flow": [1, 80], "normalizingflow": [80, 112, 120], "northeren": 25, "note": [11, 13, 16, 50, 63, 64, 110, 136, 149], "notebook": 146, "notic": [14, 64, 123, 127], "notimplementederror": 147, "now": [149, 152, 154], "np": [129, 147], "null": [36, 59, 148, 149, 154], "nullspliti3filt": [33, 36, 45, 47, 50, 55], "num": [107, 131], "num_class": 127, "num_edg": 148, "num_edge_featur": 148, "num_featur": 148, "num_head": [84, 122], "num_lay": [114, 122], "num_nod": [123, 148], "num_puls": 109, "num_register_token": 122, "num_row": [106, 148], "num_sampl": 14, "num_work": [7, 8, 9, 14, 47, 63, 128, 147, 148, 149, 152, 154], "number": [0, 5, 7, 11, 13, 14, 16, 19, 45, 47, 55, 60, 63, 64, 70, 73, 76, 83, 84, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 114, 118, 119, 120, 122, 123, 125, 128, 129, 131, 147, 148, 149, 150, 152, 153], "numer": [120, 152], "numpi": 110, "numu": 126, "numucc": 126, "o": [0, 89, 120, 147, 149, 150, 151, 153, 154], "obj": [34, 37, 137], "object": [4, 6, 11, 13, 14, 16, 23, 34, 37, 81, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 128, 131, 143, 148, 149, 154], "observ": 152, "observatori": [21, 50], "obtain": [14, 85, 107, 127], "occur": [8, 128], "oerso": 96, "offer": 148, "offset": [109, 110], "ofintern": 38, "often": 148, "old": 83, "old_phras": 140, "om": [35, 37], "omit": 154, "on_fit_end": 125, "on_train_end": 115, "on_train_epoch_end": 125, "on_train_epoch_start": 125, "on_validation_end": 125, "onc": [143, 149, 151], "one": [11, 13, 21, 31, 59, 75, 85, 135, 136, 141, 146, 147, 148, 149, 152, 154], "ones": [110, 115], "onli": [0, 1, 11, 13, 16, 36, 64, 80, 85, 93, 109, 110, 120, 129, 133, 136, 138, 142, 147, 148, 149, 150, 152, 153, 154], "onlinel2filter_17": 4, "open": [0, 49, 146, 147, 148, 149, 150, 151, 152, 153], "opensciencegrid": 151, "oper": [14, 81, 84, 92, 95], "oppos": 148, "optic": [37, 110], "optim": [91, 112, 115, 125, 149, 154], "optimis": [0, 1, 149, 150, 153, 154], "optimizer_class": [112, 149, 154], "optimizer_closur": 115, "optimizer_kwarg": [112, 149, 154], "optimizer_step": 115, "optimzi": 112, "option": [5, 7, 9, 11, 13, 14, 16, 21, 31, 59, 64, 66, 67, 68, 71, 77, 83, 84, 85, 87, 88, 89, 90, 93, 95, 97, 100, 101, 105, 106, 107, 109, 110, 111, 112, 114, 120, 123, 125, 127, 129, 130, 131, 133, 135, 141, 147, 148, 149, 152, 154], "orca": 90, "orca150": [86, 90, 154], "orca150superdens": [86, 90], "orca_150": 90, "order": [0, 34, 49, 70, 73, 76, 81, 109, 123, 127, 149, 150, 153], "ordinari": 154, "ordinarili": 152, "org": [99, 101, 104, 127, 149, 151], "orient": [0, 80, 150, 153], "origin": [14, 83, 84, 99, 100, 123, 148, 154], "ot": 127, "other": [14, 26, 59, 104, 127, 146, 148, 149, 154], "otherwis": [14, 37, 127], "our": [149, 152], "out": [5, 11, 13, 14, 95, 117, 127, 143, 146, 147, 148, 149, 152, 154], "out_dim": [83, 84], "out_featur": 84, "outdir": [7, 45, 47, 55, 147, 149, 152, 154], "outer": 34, "outlin": [152, 154], "output": [19, 64, 70, 71, 83, 84, 91, 93, 94, 95, 96, 98, 99, 101, 106, 109, 110, 114, 118, 119, 120, 129, 135, 136, 147, 152, 154], "output_dim": [83, 154], "output_dir": [62, 63, 64, 147], "output_fil": 7, "output_file_path": 147, "output_fold": [6, 70], "outsid": [68, 146], "over": [105, 109, 147, 148], "overal": 127, "overhead": 152, "overrid": [9, 125], "overridden": 109, "overview": [0, 150, 153], "overwrit": [71, 83, 125], "overwrite_old_attr": 83, "overwritten": [49, 131, 133], "own": [146, 149], "ownership": 146, "p": [35, 66, 127, 147], "p11003": 149, "packag": [0, 1, 58, 120, 137, 141, 142, 146, 149, 150, 153, 154], "pad": [83, 99, 106, 110, 123], "pad_to_full_graph": [83, 99], "padding_valu": [25, 28, 123], "pair": [21, 31, 45, 47, 50, 55, 83, 84, 99], "pairwis": [105, 123], "pairwise_shuffl": [56, 58], "panda": [60, 129, 147, 149, 152, 154], "paper": [99, 127], "paradigm": [149, 154], "parallel": [7, 45, 47, 55, 147, 152], "param": [14, 39, 41, 43, 123], "paramet": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144], "parent": [34, 149], "parent_kei": 34, "parquet": [1, 3, 5, 10, 13, 39, 42, 43, 45, 47, 51, 53, 55, 57, 63, 66, 68, 88, 89, 90, 147, 148, 149, 152], "parquet_dataset": [10, 12, 148], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 56], "parquet_writ": [3, 61], "parquetdataconvert": [44, 45], "parquetdataset": [9, 12, 13, 147, 149], "parquetextractor": [7, 38, 39, 41, 47, 49], "parquetread": [48, 51], "parquettosqliteconvert": [46, 47], "parquetwrit": [13, 39, 47, 61, 63, 147, 148, 152], "pars": [23, 130, 131, 132, 133, 138, 147], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "part": [72, 147, 149, 151, 152], "particl": [31, 59, 126, 148, 149, 152], "particlenet": [80, 92], "particular": [14, 127, 146], "particularli": [148, 149, 154], "partit": 64, "partli": [0, 150, 153], "pass": [11, 16, 83, 84, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 112, 114, 116, 120, 122, 125, 127, 129, 146, 147, 148, 149, 152, 154], "password": 67, "path": [5, 11, 13, 16, 21, 31, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 64, 70, 73, 75, 76, 77, 84, 106, 111, 115, 123, 125, 128, 131, 133, 134, 135, 141, 147, 148, 149, 152, 154], "path_to_arrai": 152, "path_to_geometry_t": 152, "patienc": 131, "pd": [147, 149, 152], "pdf": [104, 112], "pdg": 126, "pe": 123, "pe_nam": 83, "penal": 127, "peopl": [149, 154], "pep257": 146, "pep8": 146, "per": [11, 13, 16, 23, 59, 84, 85, 93, 114, 120, 127, 129, 148, 149], "percentil": [109, 110], "percentileclust": [108, 109], "perceptron": [84, 95, 101], "perform": [0, 9, 81, 83, 84, 85, 91, 92, 93, 95, 97, 101, 109, 112, 114, 115, 116, 118, 120, 128, 149, 150, 153, 154], "permiss": [14, 127], "permit": [14, 127], "persistent_work": [8, 128], "person": [5, 14, 127], "perturb": [106, 107], "perturbation_dict": [106, 107], "pframe": [45, 47, 50, 55], "philip": 99, "philosophi": [149, 154], "photon": [43, 148, 149], "php": 67, "phrase": 140, "phyic": 1, "physic": [0, 1, 21, 35, 37, 69, 75, 77, 80, 117, 120, 148, 149, 150, 153, 154], "physicist": [0, 1, 149, 150, 153], "physicst": 1, "pick": 148, "pickl": [147, 149, 152, 154], "pid": [4, 60, 126, 135, 148], "pid_kei": 126, "piecewiselinearlr": [124, 125, 149, 154], "pip": [146, 151], "pisa": 27, "place": [14, 83, 100, 140, 146], "plai": 1, "plane": [24, 127], "pleas": [73, 147, 148, 149, 152], "plot": 148, "plug": 1, "pmt": [85, 110, 148, 149], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 30, 112, 126, 127, 128, 149, 152, 154], "pole": 97, "pone": 90, "pone_triangl": 90, "ponesmal": [65, 66], "ponetriangl": [86, 90], "pool": [7, 80, 81, 82, 84, 93, 95, 97, 99, 101], "pop_default": 131, "popular": 154, "port": 149, "portabl": [0, 149, 150, 153, 154], "portion": [14, 127], "pos_x": 149, "posit": [75, 83, 84, 85, 99, 100, 107, 110, 119, 122, 123, 133, 138, 148, 152], "position_encod": 99, "position_i": 4, "position_x": 4, "position_x_pr": 119, "position_y_pr": 119, "position_z": 4, "position_z_pr": 119, "positionreconstruct": [117, 119], "possibl": [0, 34, 64, 146, 150, 152, 153], "post": [93, 95, 97, 101], "post_processing_layer_s": [93, 95, 97, 149, 154], "posterior": 112, "pow": [149, 154], "power": [147, 149, 154], "pr": 114, "practic": [0, 146, 150, 153], "pre": [0, 5, 46, 47, 65, 87, 106, 126, 146, 148, 149, 150, 153, 154], "pre_configur": [1, 3, 47], "precis": 127, "precommit": 146, "preconfigur": 47, "pred": [91, 116, 120], "pred_head_activ": 99, "pred_head_lay": 99, "pred_head_pool": 99, "predict": [0, 9, 26, 30, 32, 75, 77, 84, 91, 94, 99, 100, 112, 116, 118, 120, 127, 128, 149, 150, 153, 154], "predict_as_datafram": [91, 149, 154], "prediction_column": [71, 77, 91, 128], "prediction_kei": 127, "prediction_label": [91, 120, 149, 154], "prefer": 105, "prefetch_factor": 8, "prepar": [0, 5, 9, 127, 148, 150, 153], "prepare_data": [5, 9], "preprocess": 149, "present": [11, 13, 21, 31, 36, 123, 131, 141, 142, 148, 154], "previou": [125, 149, 154], "primari": [59, 64, 148, 149], "primary_hadron_1_direction_phi": [4, 148, 149], "primary_hadron_1_direction_theta": [4, 148, 149], "primary_hadron_1_energi": [4, 148, 149], "primary_hadron_1_position_i": [4, 148, 149], "primary_hadron_1_position_x": [4, 148, 149], "primary_hadron_1_position_z": [4, 148, 149], "primary_hadron_1_typ": [4, 148, 149], "primary_key_rescu": 64, "primary_lepton_1_direction_phi": [4, 148, 149], "primary_lepton_1_direction_theta": [4, 148, 149], "primary_lepton_1_energi": [4, 148, 149], "primary_lepton_1_position_i": [4, 148, 149], "primary_lepton_1_position_x": [4, 148, 149], "primary_lepton_1_position_z": [4, 148, 149], "primary_lepton_1_typ": [4, 148, 149], "principl": [1, 149], "print": [5, 111, 125, 143], "prior": 148, "prioriti": 146, "privat": 129, "pro": [149, 154], "prob": 123, "probabl": [83, 84, 99, 107, 123, 127, 154], "problem": [0, 104, 146, 148, 149, 150, 153, 154], "procedur": 9, "proceedur": 64, "process": [1, 7, 14, 45, 47, 55, 75, 83, 87, 93, 95, 97, 101, 146, 147, 149, 154], "process_posit": 125, "produc": [5, 49, 83, 112, 116, 126, 129, 148, 149], "product": [8, 84, 128], "programm": [0, 150, 153], "progress": 125, "progressbar": [124, 125, 149, 154], "proj_drop": 84, "project": [0, 53, 84, 146, 149, 150, 153, 154], "prometheu": [3, 4, 17, 43, 53, 66, 80, 86, 148, 149, 154], "prometheus_dataset": [1, 65], "prometheus_extractor": [17, 42], "prometheus_read": [3, 48], "prometheusextractor": [7, 42, 43, 49], "prometheusfeatureextractor": [42, 43], "prometheusread": [48, 53], "prometheustruthextractor": [42, 43], "prompt": 149, "prone": 149, "proof": [149, 154], "properti": [5, 9, 11, 13, 14, 19, 26, 37, 49, 62, 85, 87, 91, 98, 109, 110, 120, 126, 134, 143, 147], "propos": 84, "protocol": 147, "prototyp": 89, "proven": [19, 21, 39, 41, 43, 147], "provid": [0, 1, 7, 11, 13, 14, 16, 75, 80, 100, 106, 111, 112, 127, 146, 147, 148, 149, 150, 153, 154], "pth": [149, 154], "public": [66, 87, 129], "publicprometheusdataset": [65, 66], "publish": [14, 127, 149, 154], "puls": [5, 11, 13, 16, 18, 22, 23, 35, 37, 43, 59, 75, 81, 85, 100, 106, 109, 110, 116, 122, 123, 148, 149, 152, 154], "pulse_truth": 5, "pulsemap": [5, 11, 13, 16, 22, 66, 67, 68, 75, 77, 128, 135, 148, 149], "pulsemap_extractor": [75, 77], "pulseseri": 35, "pulsmap": [75, 77], "punch4nfdi": [0, 150, 153], "pure": [7, 19, 20, 23, 37], "purpos": [0, 14, 80, 127, 150, 152, 153], "put": [64, 149, 154], "py": [14, 83, 84, 99, 123, 127, 149], "py3": 151, "pydant": [133, 135, 136, 138], "pydantic_cor": [133, 138], "pydocstyl": 146, "pyg": [123, 148, 149, 154], "pylint": 146, "python": [0, 1, 7, 19, 20, 23, 34, 37, 146, 149, 150, 151, 153, 154], "python3": [88, 89, 90, 131], "pytorch": [16, 125, 149, 151, 154], "pytorch_lightn": [91, 125, 143, 149, 154], "pytorchlightn": 149, "q": 84, "qk_scale": 84, "qkv_bia": 84, "qualiti": [0, 149, 150, 153], "quantiti": [27, 120, 123, 149], "queri": [11, 13, 16, 59, 60, 64, 84, 148, 149], "query_databas": [56, 59], "query_t": [11, 13, 16, 148], "queso": 28, "question": 149, "quick": [110, 149], "r": [85, 104, 147, 149, 151, 152], "radial": 104, "radialedg": [103, 104], "radiat": [109, 110, 149, 154], "radiu": [104, 149], "rais": [11, 13, 21, 23, 31, 111, 112, 133, 138, 147], "random": [3, 11, 13, 16, 56, 60, 63, 83, 99, 107, 109, 123, 135, 148, 149], "randomchunksampl": [10, 14], "randomli": [14, 60, 106, 107, 136, 149, 154], "rang": [14, 120, 150, 152, 153, 154], "rare": 147, "rasmu": [0, 96, 150, 153], "rate": [112, 125], "rather": [120, 143, 149, 154], "ratio": [9, 84, 100], "raw": [0, 109, 110, 148, 149, 150, 152, 153, 154], "rde": 4, "re": [134, 148, 149, 152, 154], "reach": [148, 152], "read": [0, 3, 7, 11, 13, 16, 34, 48, 50, 51, 52, 53, 87, 95, 117, 147, 148, 149, 150, 152, 153], "read_csv": 152, "read_sql": 149, "readabl": 149, "reader": [1, 3, 47, 49, 50, 51, 52, 53, 152], "readi": [65, 152, 154], "readm": 149, "readout": [93, 95, 97, 101], "readout_layer_s": [93, 95, 97, 101, 149, 154], "readthedoc": 149, "receiv": [0, 150, 153, 154], "reciev": [62, 147, 152, 154], "recommend": [149, 151, 152, 154], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 69, 72, 80, 97, 114, 117, 120, 148, 149, 150, 153], "record": 143, "recov": 120, "recreat": [148, 149, 154], "recurr": 113, "recurs": [23, 37, 45, 47, 49, 50, 55, 111, 137, 141], "reduc": [149, 154], "reduce_opt": 81, "refer": [9, 90, 112, 135, 148, 149, 152, 154], "refresh_r": 125, "regardless": [148, 149, 154], "regist": 122, "regress": 116, "regular": [37, 84, 149, 154], "rel": [83, 84, 100, 107, 122, 123], "rel_pos_bia": 84, "rel_pos_bucket": 122, "relat": [58, 141, 152], "relev": [1, 37, 58, 141, 146], "reli": [50, 112], "reload": 154, "relu": [84, 99, 101], "remain": 148, "remaining_batch": 14, "remov": [8, 45, 55, 106, 128, 131, 152], "renam": [73, 140], "rename_state_dict_entri": [130, 140], "repeat": [106, 143], "repeat_label": 106, "repeatfilt": [130, 143], "replac": [87, 88, 89, 90, 140], "replace_with_ident": [87, 88, 89, 90], "repo": 146, "repositori": 146, "repres": [85, 93, 106, 107, 109, 110, 123, 133, 135, 136, 147, 148, 149, 152, 154], "represent": [5, 11, 13, 16, 37, 66, 67, 68, 83, 84, 85, 107, 111, 112, 114, 123, 148, 149, 152, 154], "reproduc": [135, 136, 154], "repurpos": 154, "requir": [0, 21, 27, 39, 43, 59, 67, 109, 118, 120, 127, 146, 147, 148, 149, 150, 151, 152, 153, 154], "requires_icecub": [130, 142], "research": [0, 149, 150, 153], "reset": 84, "reset_paramet": 84, "residu": 84, "resolv": [11, 13, 16, 60], "respect": [128, 149, 152], "respons": [148, 149], "restrict": [14, 120, 127, 154], "result": [5, 14, 59, 63, 85, 107, 110, 125, 127, 128, 137, 149, 152, 154], "retriev": [87, 147, 148], "retro": 29, "return": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 31, 34, 35, 37, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 70, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 147, 148, 149, 152, 154], "return_discard": 37, "return_el": 127, "reusabl": [0, 150, 153], "reuseabl": [149, 154], "review": 146, "rezero": 84, "rhel_7_x86_64": 151, "right": [14, 127, 149], "rmse": 127, "rmseloss": [124, 127], "rmsevonmisesfisher3dloss": [124, 127], "rng": 58, "rnn": [1, 80, 93, 114], "rnn_dropout": 93, "rnn_dynedg": 93, "rnn_hidden_s": 93, "rnn_layer": 93, "rnn_tito": [80, 92], "role": 154, "root": 127, "roughli": 148, "row": [59, 64, 106, 107, 110, 123, 148, 149, 152, 154], "rrwp": [83, 107, 123], "rrwp_encod": [83, 123], "rrwp_index": 107, "rrwp_val": 107, "rrwplinearedgeencod": [82, 83], "rrwplinearnodeencod": [82, 83], "run": [1, 14, 50, 70, 72, 73, 76, 84, 147, 149, 151, 152, 154], "run_id": 67, "run_sql_cod": [56, 59], "runid": [4, 67], "runner": [88, 89, 90, 131], "runtim": [126, 151], "runtimeerror": [21, 31], "rw": 123, "rwse": 107, "rwselinearedgeencod": 83, "rwselinearnodeencod": [82, 83], "ryabinin": 127, "sai": [149, 154], "same": [18, 37, 59, 81, 85, 110, 118, 123, 125, 137, 143, 148, 149, 154], "sampl": [14, 60, 84, 106, 107, 109, 149, 154], "sample_puls": 109, "sampler": [3, 10], "san": 84, "san_graph": 84, "sangraphhead": [82, 84], "satisfi": [0, 147, 150, 153], "save": [7, 19, 21, 34, 39, 41, 43, 45, 47, 55, 59, 61, 62, 64, 111, 125, 127, 128, 129, 133, 134, 135, 136, 147, 149, 152], "save_config": [134, 149, 154], "save_dataset_config": [132, 135], "save_dir": [125, 149, 154], "save_fil": [62, 147], "save_method": [7, 147, 152], "save_model_config": [132, 136], "save_result": [124, 128], "save_select": [124, 128], "save_state_dict": [111, 149, 154], "save_to_sql": [56, 59], "scalabl": 148, "scalar": [11, 13, 19, 123, 127], "scale": [83, 84, 96, 100, 105, 106, 109, 110, 120, 122, 127, 148, 154], "scaled_emb": [100, 122], "scatter": [109, 110], "schedul": 112, "scheduler_class": [112, 149, 154], "scheduler_config": [112, 149, 154], "scheduler_kwarg": [112, 149, 154], "schema": 149, "scheme": [93, 95, 97, 101, 147], "scientif": [0, 1, 150, 153], "scope": 146, "score": [84, 99], "script": [149, 154], "search": [45, 47, 49, 50, 51, 52, 53, 55, 141, 147], "sec": 127, "second": 105, "section": 149, "see": [83, 93, 104, 106, 112, 120, 125, 146, 148, 149, 151], "seed": [9, 11, 13, 16, 60, 106, 107, 128, 135, 148, 149], "seen": 83, "select": [5, 8, 9, 11, 13, 14, 16, 28, 36, 60, 109, 128, 129, 135, 146, 149, 152], "selection_nam": 8, "self": [11, 13, 83, 91, 99, 106, 112, 116, 123, 133, 138, 147, 148, 149, 152, 154], "sell": [14, 127], "send": 120, "sensor": [87, 106, 110, 148, 149, 152, 154], "sensor_i": 152, "sensor_id": [88, 90, 152], "sensor_id_column": [88, 89, 90, 152], "sensor_index_nam": 87, "sensor_mask": 106, "sensor_pos_i": [4, 90, 148, 149, 154], "sensor_pos_x": [4, 90, 148, 149, 154], "sensor_pos_z": [4, 90, 148, 149, 154], "sensor_position_nam": 87, "sensor_string_id": 90, "sensor_tim": 152, "sensor_x": [148, 152], "sensor_z": 152, "separ": [34, 105, 125, 149, 151], "seper": [114, 148], "seq_length": [83, 100, 122, 123], "sequenc": [14, 70, 73, 76, 83, 84, 110, 123, 128, 149, 154], "sequenti": [11, 13], "sequential_index": [11, 13, 16], "seri": [11, 13, 16, 22, 23, 35, 37, 59, 75, 93, 109, 114, 148, 149, 154], "serial": [147, 148], "serialis": [33, 34, 149, 154], "serv": 148, "server": 67, "session": [135, 136, 148, 149, 154], "set": [3, 6, 9, 13, 21, 23, 31, 45, 47, 49, 50, 55, 62, 83, 84, 100, 109, 110, 111, 120, 126, 128, 146, 147, 149, 152, 154], "set_extractor": 49, "set_gcd": [21, 31], "set_index": 152, "set_number_of_input": 109, "set_output_feature_nam": 109, "set_verbose_print_recurs": 111, "setlevel": 143, "setup": [9, 125, 151], "setuptool": 151, "sever": [149, 154], "sh": 151, "shall": [14, 127], "shape": [19, 105, 106, 109, 123, 127, 147, 148], "share": [91, 112, 116, 149, 154], "share_redirect": 5, "shared_step": [91, 112, 116], "sharelink": 5, "shell": 151, "shortest": 123, "should": [5, 8, 11, 13, 16, 19, 21, 34, 60, 68, 71, 84, 85, 87, 88, 89, 90, 93, 100, 106, 107, 114, 123, 127, 128, 133, 135, 136, 138, 146, 147, 148, 149, 151, 152, 154], "show": [60, 125, 149], "shown": 149, "shuffl": [8, 9, 58, 63, 128, 148], "shutdown": 9, "sid": 5, "sigmoid": 154, "sign": 127, "signal": [75, 154], "signatur": [23, 37], "signific": 148, "significantli": 148, "signup": 149, "similar": [14, 23, 37, 109, 149, 154], "similarli": [37, 147, 148, 149, 154], "simpl": [0, 80, 91, 149, 150, 153, 154], "simplecoarsen": 81, "simplest": [149, 154], "simpli": [149, 154], "simul": [35, 43, 53, 66, 67, 75, 149, 152], "sinc": [14, 75, 127, 149], "singl": [5, 11, 18, 62, 64, 85, 95, 101, 110, 126, 129, 135, 136, 147, 148, 149, 152, 154], "single_event_as_arrai": 110, "sinusoid": [83, 100, 122], "sinusoidalposemb": [82, 83], "sipm_i": [4, 89], "sipm_id": 89, "sipm_x": [4, 89], "sipm_z": [4, 89], "situat": 146, "size": [13, 14, 64, 83, 84, 85, 93, 95, 96, 97, 99, 100, 101, 123, 131, 148], "skip": [36, 95, 101, 149], "skip_readout": [95, 101], "sklearn": [149, 154], "sk\u0142odowska": [0, 150, 153], "slack": 149, "slice": [84, 95, 101], "slower": 64, "small": [127, 148, 149, 154], "smaller": [62, 147], "smooth": 146, "snippet": [149, 154], "snowstorm": [4, 67], "snowstorm_dataset": [1, 65], "snowstorm_mc": 67, "snowstormdataset": [65, 67], "so": [14, 127, 148, 149, 151, 152, 154], "soft": 83, "softmax": 127, "softwar": [0, 14, 50, 127, 150, 153], "solut": [83, 84, 97, 100, 146], "solv": [1, 146, 154], "some": [11, 13, 14, 16, 45, 47, 50, 55, 106, 110, 148, 149], "someth": [149, 154], "somewhat": 149, "sort": [106, 110], "sort_bi": 106, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 153], "south": 97, "space": [83, 104, 105, 120, 123, 129], "space_coord": 105, "space_dim": 123, "spacetim": 83, "spacetimeencod": [82, 83], "spars": 123, "sparsetensor": 84, "spatial": 110, "spawn": [13, 14], "spd": 123, "special": [23, 75, 114, 123], "specialis": [149, 154], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 16, 17, 19, 22, 37, 48, 49, 50, 59, 64, 69, 71, 74, 76, 79, 81, 85, 86, 87, 88, 89, 90, 92, 93, 98, 104, 106, 109, 113, 117, 118, 119, 120, 121, 123, 127, 146, 147, 148, 149, 150, 152, 153, 154], "specifi": [11, 13, 14, 16, 60, 81, 110, 112, 120, 125, 148, 149, 152, 154], "speed": [75, 105, 148], "sphere": 104, "spite": 127, "splinemp": 30, "split": [0, 9, 36, 64, 81, 150, 153], "split_se": 9, "splitinicepuls": 59, "sql": 129, "sqlite": [1, 3, 5, 9, 10, 16, 47, 55, 57, 59, 64, 66, 68, 148, 149], "sqlite3": 149, "sqlite_dataset": [10, 15, 148], "sqlite_util": [3, 56], "sqlite_writ": [3, 61], "sqlitedataconvert": [54, 55], "sqlitedatas": 148, "sqlitedataset": [9, 15, 16, 147], "sqlitewrit": [61, 64, 147, 148], "squar": 127, "src": [14, 149], "stabl": [119, 120], "stage": [9, 125], "stai": 123, "standalon": 114, "standard": [0, 3, 4, 36, 60, 71, 88, 89, 90, 93, 106, 107, 109, 110, 112, 115, 116, 120, 131, 146, 149, 150, 152, 153, 154], "standard_argu": 131, "standard_averaged_model": [1, 80], "standard_model": [1, 80, 149], "standardaveragedmodel": [80, 115], "standardaveragemodel": 115, "standardflowtask": [117, 120], "standardis": 86, "standardlearnedtask": [117, 118, 119, 120, 154], "standardmodel": [80, 91, 115, 116], "start": [14, 31, 84, 146, 149, 152, 154], "stat": 84, "state": [0, 71, 93, 114, 140, 150, 153], "state_dict": [71, 75, 77, 111, 115, 140, 149], "static": [127, 146], "statist": 110, "std": 85, "std_pool": [82, 85], "std_pool_x": [82, 85], "stdout": 125, "step": [91, 99, 107, 112, 115, 116, 123, 125, 149, 152, 154], "still": 135, "stochast": 84, "stop": [31, 125, 131], "stopped_muon": 4, "store": [5, 11, 13, 16, 59, 62, 63, 64, 126, 147, 148, 149, 152, 154], "str": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 97, 99, 100, 101, 106, 107, 109, 110, 111, 112, 115, 120, 123, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 147, 152], "straightforward": 148, "strategi": [149, 154], "stream": 36, "stream_handl": 143, "streamhandl": 143, "streamlin": 1, "string": [4, 5, 11, 13, 16, 34, 60, 85, 87, 88, 106, 111, 112, 120, 133, 149, 152, 154], "string_id": 152, "string_id_column": [88, 89, 90, 152], "string_index_nam": 87, "string_mask": 106, "string_select": [11, 13, 16, 128, 135], "string_selection_resolv": [3, 56], "stringselectionresolv": [56, 60], "strongli": [149, 154], "structur": [83, 91, 107, 137, 147, 148, 149, 154], "style": 146, "sub": 149, "subclass": [0, 5, 80, 91, 147, 148, 149, 150, 153, 154], "subev": 36, "subeventid": 4, "subeventstreami3filt": [33, 36], "subfold": [45, 47, 50, 55], "subject": [14, 100, 127], "sublicens": [14, 127], "submit": 100, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 42, 44, 46, 48, 54, 56, 61, 65, 69, 72, 74, 78, 80, 82, 86, 92, 102, 103, 108, 113, 117, 121, 124, 130, 132, 137], "subpackag": [1, 3, 10, 17, 20, 69, 80, 102, 130], "subrunid": 4, "subsampl": [63, 148], "subsequ": 149, "subset": [11, 13, 16, 84, 93, 95, 97, 101, 114, 149], "substanti": [14, 127], "suggest": [91, 127, 149], "suit": [0, 112, 120, 149, 150, 153], "suitabl": [1, 152], "sum": [81, 85, 91, 95, 97, 101, 110, 116, 129, 149, 154], "sum_pool": [81, 82, 85], "sum_pool_and_distribut": [82, 85], "sum_pool_x": [81, 82, 85], "summar": [75, 77, 109, 110], "summari": [109, 110], "summaris": [149, 154], "summariz": 154, "summarization_indic": 110, "super": [147, 148, 149, 154], "supervis": [116, 120, 154], "support": [0, 7, 37, 120, 146, 147, 148, 149, 150, 153], "suppos": [5, 110, 148, 152], "sure": [146, 147], "swa": 115, "swapabl": 149, "switch": [127, 149, 154], "synchron": 7, "syntax": [60, 91, 127, 148, 149], "system": [141, 149, 154], "t": [4, 37, 59, 125, 127, 147, 148, 149, 152, 154], "t_co": 8, "tabl": [5, 11, 13, 16, 18, 19, 21, 39, 41, 43, 49, 59, 63, 64, 87, 106, 129, 147, 148, 149], "table_nam": [43, 59], "table_without_index": 152, "tackl": 154, "tag": [128, 146], "take": [37, 85, 110, 114, 146, 148], "talk": 149, "tar": 5, "target": [91, 112, 118, 120, 127, 138, 149, 154], "target_label": [91, 112, 120, 149, 154], "target_norm": 120, "target_pr": [118, 154], "task": [0, 1, 9, 80, 84, 91, 116, 118, 119, 127, 146, 149, 150, 153], "team": [146, 148, 149, 151, 152, 154], "teardown": 9, "technic": [0, 150, 152, 153], "techniqu": [0, 150, 153, 154], "telescop": [0, 1, 149, 150, 152, 153, 154], "tend": 64, "tensor": [11, 13, 16, 71, 81, 83, 84, 85, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 109, 110, 112, 114, 115, 116, 120, 122, 123, 127, 140, 144, 148, 149, 152, 154], "term": [84, 127, 154], "termin": 149, "test": [5, 9, 60, 66, 67, 68, 120, 128, 135, 142, 146, 148, 149, 154], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 66, 67, 68], "test_dataset": [1, 65], "test_funct": 142, "test_select": [9, 135, 148, 149], "test_siz": 128, "testdataset": [65, 68], "tev": 66, "than": [0, 8, 109, 120, 128, 143, 148, 149, 150, 153, 154], "thei": [70, 73, 76, 109, 147, 148, 149, 154], "them": [0, 1, 34, 71, 80, 95, 120, 148, 149, 150, 152, 153, 154], "themselv": [1, 135, 136, 149, 154], "theo": 84, "therebi": [1, 135, 136, 149, 154], "therefor": [34, 50, 147, 148, 149, 152, 154], "thi": [0, 3, 5, 7, 9, 11, 13, 14, 16, 18, 19, 21, 23, 37, 39, 41, 43, 45, 47, 49, 50, 55, 58, 59, 63, 64, 67, 68, 72, 75, 80, 83, 85, 91, 93, 95, 100, 101, 105, 106, 107, 109, 110, 112, 114, 116, 118, 119, 120, 123, 125, 127, 128, 129, 133, 135, 136, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154], "thing": 149, "thoglu": [112, 120], "those": [21, 31, 123, 148, 149], "thread": 13, "three": [101, 110, 127, 154], "threshold": [0, 75, 150, 153], "through": [0, 110, 118, 119, 120, 127, 147, 149, 150, 153, 154], "throw": 147, "thu": [136, 154], "ti": 148, "time": [0, 4, 59, 81, 83, 85, 93, 105, 109, 110, 114, 119, 123, 129, 143, 148, 149, 150, 152, 153], "time_column": 109, "time_coord": 105, "time_lik": 105, "time_like_weight": 105, "time_series_column": [93, 114], "time_window": 81, "timereconstruct": [117, 119], "tini": 149, "tito": [84, 93, 97], "to_config": 154, "to_csv": [149, 154], "to_dense_adj": 123, "to_parquet": 152, "todo": 149, "togeth": [0, 14, 80, 104, 127, 150, 153], "token": 122, "too": [149, 154], "tool": [0, 1, 150, 153], "top": 154, "torch": [0, 11, 13, 16, 80, 83, 84, 99, 106, 107, 111, 112, 142, 148, 149, 150, 151, 152, 153, 154], "torch_cpu": 151, "torch_geometr": [85, 123, 148, 149, 154], "torch_lightn": 154, "tort": [14, 127], "total": [110, 123, 128, 129, 148, 149, 152], "total_energi": [4, 148, 149, 154], "tqdmprogressbar": 125, "track": [0, 19, 21, 25, 39, 41, 43, 66, 84, 119, 124, 126, 146, 147, 149, 150, 153], "track_length": 4, "tradit": [0, 150, 153], "train": [0, 1, 5, 7, 9, 10, 60, 65, 66, 67, 68, 69, 75, 84, 91, 100, 106, 112, 115, 116, 123, 125, 126, 127, 128, 129, 131, 135, 136, 138, 145, 147, 148, 149, 150, 152, 153], "train_batch": [91, 115], "train_dataload": [9, 91, 149, 154], "train_dataloader_kwarg": [5, 9, 66, 67, 68], "train_ev": 120, "train_select": [135, 148, 149], "train_val_split": 9, "trainabl": 136, "trainer": [91, 125, 128, 149, 154], "trainer_kwarg": 91, "training_config": [130, 132, 149, 154], "training_example_data_sqlit": [131, 148, 149, 154], "training_step": [91, 115], "trainingconfig": [132, 138, 149, 154], "transform": [1, 80, 84, 85, 97, 99, 100, 114, 120, 122, 123, 129, 149, 154], "transform_infer": [120, 149, 154], "transform_prediction_and_target": [120, 149, 154], "transform_support": [120, 149, 154], "transform_target": [120, 149, 154], "transit": 140, "transpar": [135, 136, 146, 149, 154], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [132, 137], "treat": [93, 114], "tree": [23, 149], "tri": [23, 37], "triangl": 90, "trident": [66, 90], "trident1211": [86, 90], "tridentsmal": [65, 66], "trigger": [23, 148, 149, 154], "trivial": [37, 120], "true": [36, 59, 75, 83, 84, 93, 95, 97, 99, 100, 101, 106, 109, 111, 123, 125, 127, 129, 141, 147, 148, 149, 154], "trust": [111, 149, 154], "truth": [3, 4, 5, 11, 13, 16, 22, 31, 43, 59, 63, 66, 67, 68, 106, 120, 128, 129, 135, 148, 152, 154], "truth_dict": 106, "truth_label": 148, "truth_tabl": [5, 11, 13, 16, 63, 128, 129, 135, 148, 149], "truthdata": 41, "try": [37, 147], "tum": [25, 32], "tupl": [7, 11, 13, 14, 16, 35, 37, 59, 84, 93, 95, 97, 101, 110, 120, 123, 128, 131, 140], "turn": [110, 146], "tutorial_output": [149, 154], "two": [8, 95, 125, 127, 128, 147, 148, 149, 152], "txt": 151, "type": [0, 5, 7, 8, 9, 11, 13, 14, 16, 20, 21, 31, 33, 34, 35, 41, 43, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 70, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153], "typic": [0, 34, 114, 148, 150, 152, 153], "u": [148, 152], "ultra": 148, "unaccur": 127, "unambigu": [135, 136], "unbatch_edge_index": [80, 81], "uncertainti": [119, 149, 154], "uncompress": 148, "under": [0, 149, 150, 152, 153, 154], "unfamiliar": 154, "uniform": [124, 129], "uniformweightfitt": 129, "uninstanti": [84, 99], "union": [0, 7, 8, 9, 11, 13, 16, 23, 34, 37, 45, 47, 49, 50, 51, 52, 53, 55, 70, 71, 73, 75, 76, 77, 81, 84, 85, 91, 93, 95, 101, 106, 107, 110, 112, 116, 120, 135, 138, 141, 147, 150, 152, 153], "uniqu": [11, 13, 16, 59, 109, 110, 123, 135, 149, 152, 154], "unit": [0, 7, 68, 105, 142, 146, 150, 153], "univers": 97, "unlik": 148, "unscal": 154, "untransform": 118, "unzip": 5, "up": [0, 5, 75, 146, 150, 153], "updat": [84, 99, 101, 114, 115, 123, 125, 149, 151, 154], "update_edg": [84, 99], "upgrad": [4, 22, 88, 149, 151], "upon": [112, 154], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 31, 33, 34, 39, 41, 43, 45, 47, 49, 50, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 73, 75, 77, 80, 83, 84, 85, 87, 91, 93, 95, 96, 97, 99, 100, 101, 104, 106, 107, 109, 110, 111, 112, 114, 117, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153], "usabl": [0, 150, 153], "usag": [112, 120, 131], "use_bia": [83, 84], "use_cach": 60, "use_global_featur": [93, 97], "use_post_processing_lay": [93, 97], "user": [0, 5, 80, 91, 125, 148, 149, 150, 151, 153, 154], "usernam": 67, "usual": 148, "util": [1, 3, 17, 20, 34, 35, 36, 37, 57, 58, 59, 60, 80, 102, 124, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 154], "v": 84, "v1": 151, "v4": 151, "val_batch": [91, 115], "val_dataload": [9, 91], "valid": [5, 9, 37, 60, 66, 67, 68, 91, 112, 115, 116, 120, 125, 127, 131, 133, 138, 148, 149, 154], "validate_fil": 49, "validate_task": [91, 112, 116], "validation_dataloader_kwarg": [5, 9, 66, 67, 68], "validation_step": [91, 115], "validationerror": [133, 138], "valu": [11, 13, 16, 31, 34, 59, 83, 84, 85, 99, 101, 104, 105, 106, 107, 110, 120, 123, 126, 127, 131, 133, 154], "valueerror": [23, 111, 112], "var": 119, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 49, 95, 109, 110, 123, 129, 143, 147, 152, 154], "varieti": 149, "variou": [1, 61, 72, 149], "vast": [116, 120], "vector": [81, 84, 85, 123, 127, 147, 154], "verbos": [45, 47, 50, 55, 91, 116, 125], "verbose_print": 111, "veri": [60, 148, 149, 154], "verifi": [91, 112, 116], "versa": 125, "version": [85, 110, 120, 125, 146, 149, 154], "vertex": [119, 149], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [117, 119], "via": 107, "viabl": 152, "vice": 125, "virtual": 151, "visibl": 119, "visible_energi": 4, "visible_inelast": [4, 119], "visible_inelasticity_pr": 119, "visibleinelasticityreconstruct": [117, 119], "visit": 152, "vmf": 119, "vmf_loss": 127, "vmfs_factor": 127, "volum": 31, "von": 127, "vonmisesfisher2dloss": [124, 127, 149, 154], "vonmisesfisher3dloss": [124, 127], "vonmisesfisherloss": [124, 127], "w": [149, 154], "wa": [0, 7, 100, 148, 149, 150, 152, 153, 154], "wai": [14, 37, 60, 116, 146, 149, 152, 154], "walk": [83, 99, 107, 123], "walk_length": [107, 123], "wandb": [149, 154], "wandb_dir": [149, 154], "wandb_logg": [149, 154], "wandblogg": [149, 154], "want": [148, 149, 151, 152, 154], "warn": [143, 149], "warning_onc": [143, 149], "warranti": [14, 127], "waterdemo81": [86, 90], "wb": 147, "we": [34, 37, 60, 110, 112, 146, 149, 151, 152, 154], "weigel": 99, "weight": [11, 13, 16, 75, 77, 84, 99, 100, 106, 110, 120, 123, 127, 129, 136, 149, 154], "weight_fit": [1, 124], "weight_nam": 129, "weightfitt": [124, 129], "well": [146, 149, 154], "wether": 101, "what": [1, 83, 106, 146, 149, 154], "whatev": 149, "wheel": 151, "when": [0, 11, 13, 14, 16, 34, 36, 59, 75, 84, 93, 95, 97, 101, 114, 126, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154], "whenev": 151, "where": [5, 19, 45, 47, 50, 55, 106, 107, 109, 110, 114, 123, 126, 147, 148, 149, 152, 154], "wherea": [129, 148], "whether": [8, 14, 35, 37, 59, 83, 84, 93, 95, 97, 100, 101, 111, 122, 127, 137, 141, 142, 149], "which": [0, 5, 11, 13, 16, 19, 21, 22, 31, 35, 39, 41, 43, 60, 62, 64, 70, 72, 73, 76, 81, 85, 95, 101, 106, 107, 110, 111, 112, 118, 120, 123, 127, 128, 131, 147, 148, 149, 150, 153, 154], "while": [0, 23, 91, 123, 125, 146, 148, 150, 153], "who": [5, 140, 149, 154], "whom": [14, 127], "whose": 75, "wide": [14, 112, 154], "width": [4, 14], "wiki": 67, "willing": [148, 152], "window": [81, 148, 149], "wisc": 67, "wise": [84, 85], "wish": [0, 70, 146, 150, 153], "with_standard_argu": 131, "within": [31, 81, 84, 85, 95, 101, 104, 149, 154], "without": [1, 14, 99, 104, 107, 109, 127, 148, 151], "work": [0, 4, 35, 93, 146, 147, 148, 149, 150, 153, 154], "worker": [6, 7, 14, 45, 55, 58, 63, 70, 73, 76, 131, 143], "workflow": [0, 150, 153], "would": [146, 148, 149, 152, 154], "wrap": [125, 135, 136], "write": [63, 75, 77, 147, 149, 154], "writer": [1, 3, 47, 62, 63, 64, 152], "written": [47, 70, 147], "wrt": 120, "www": 149, "x": [4, 31, 83, 84, 85, 88, 99, 105, 109, 110, 114, 120, 123, 127, 129, 148, 149, 152, 154], "x8": 148, "x_i": 84, "x_j": 84, "x_low": 129, "xyz": [87, 88, 89, 90, 109, 110, 148, 152], "xyz_coord": 123, "xyzt": 123, "y": [4, 31, 83, 88, 105, 123], "yaml": [133, 134, 149], "yet": 110, "yield": [0, 95, 101, 127, 150, 153], "yml": [60, 131, 135, 136, 148, 149, 154], "you": [64, 70, 83, 112, 135, 136, 146, 148, 149, 151, 152, 154], "your": [107, 112, 146, 147, 148, 149, 151], "yourself": 146, "z": [4, 31, 83, 88, 105, 109, 110, 123], "z_name": 109, "z_offset": [109, 110], "z_scale": [109, 110], "zenith": [4, 119, 126, 149, 154], "zenith_kappa": 119, "zenith_kei": 126, "zenith_pr": 119, "zenithreconstruct": [117, 119], "zenithreconstructionwithkappa": [117, 119, 149, 154], "zero": 107, "\u00f8rs\u00f8e": [0, 150, 153]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "snowstorm_dataset", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 152, "2": 152, "In": [148, 154], "The": [149, 154], "To": 146, "acknowledg": 0, "ad": [148, 149, 152, 154], "advanc": 149, "api": 1, "appendix": 149, "appli": 152, "argpars": 131, "backbon": 154, "base_config": 133, "befor": 152, "callback": 125, "checkpoint": 154, "choos": 148, "class": [149, 152, 154], "classif": 118, "cleaning_modul": 75, "coarsen": 81, "code": 146, "collect": 34, "combin": [148, 149], "combine_extractor": 18, "compon": 82, "config": 132, "configur": 134, "constant": [2, 4], "content": 149, "contribut": 146, "convent": 146, "convers": 147, "convnet": 94, "creat": 149, "curated_datamodul": 5, "custom": [148, 149], "cvmf": 151, "data": [3, 147, 152], "dataclass": 6, "dataconfig": 149, "dataconvert": [7, 47, 147], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 65, 148, 149], "dataset_config": 135, "datasetconfig": 149, "decor": 139, "deploy": [69, 70], "deployment_modul": 71, "deprecated_method": [45, 55, 73], "deprecation_tool": 140, "detector": [86, 87, 152], "dynedg": 95, "dynedge_jinst": 96, "dynedge_kaggle_tito": 97, "easy_model": 91, "edg": [103, 104], "embed": 83, "energi": 154, "event": 148, "exampl": [149, 152, 154], "except": [78, 79], "experi": [152, 154], "extractor": [17, 19, 147, 152], "filesi": 141, "frame": 35, "function": 149, "geometri": 152, "github": 146, "gnn": [92, 98], "graph": [102, 107], "graph_definit": 106, "graphdefinit": 154, "graphnet": 149, "graphnet_file_read": 49, "graphnet_writ": 62, "graphnetfileread": 152, "graphnetgraphnet": [146, 147, 148, 150, 152, 153, 154], "grit": 99, "h5_extractor": 41, "i3_filt": 36, "i3deploy": 76, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 72, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 50, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 74, 88, 151], "icemix": 100, "implement": [148, 152], "import": 142, "index": 152, "inference_modul": 77, "instal": 151, "instanti": 154, "integr": 152, "intern": 38, "internal_parquet_read": 51, "introduct": 149, "iseecub": 122, "issu": 146, "label": [126, 148, 149], "layer": 84, "liquido": [40, 89], "liquido_read": 52, "load": 154, "log": 143, "loss_funct": 127, "math": 144, "minkowski": 105, "model": [80, 111, 149, 154], "model_config": 136, "modelconfig": [149, 154], "multi": 152, "multipl": [148, 149], "new": [148, 152], "node": [108, 109], "node_rnn": 114, "normalizing_flow": 112, "overview": 149, "own": [152, 154], "parquet": [12, 44], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 57, "parquet_writ": 63, "parquetdataset": 148, "pars": 137, "particlenet": 101, "pool": 85, "pre_configur": 46, "prometheu": [42, 90], "prometheus_dataset": 66, "prometheus_extractor": 43, "prometheus_read": 53, "pull": 146, "qualiti": 146, "quick": 151, "random": 58, "reader": [48, 147], "reconstruct": [119, 154], "reproduc": 149, "request": 146, "rnn": 113, "rnn_tito": 93, "sampler": 14, "save": 154, "select": 148, "snowstorm_dataset": 67, "sqlite": [15, 54], "sqlite_dataset": 16, "sqlite_util": 59, "sqlite_writ": 64, "sqlitedataset": [148, 149], "src": 145, "standard_averaged_model": 115, "standard_model": 116, "standardmodel": [149, 154], "start": 151, "state_dict": 154, "string_selection_resolv": 60, "subset": 148, "support": 152, "syntax": 154, "tabl": 152, "task": [117, 120, 154], "test_dataset": 68, "track": 154, "train": [124, 154], "training_config": 138, "transform": 121, "truth": 149, "tutori": 149, "type": 37, "us": [148, 149, 154], "usag": 0, "util": [33, 56, 110, 123, 128, 130], "v": 148, "weight_fit": 129, "write": 152, "writer": [61, 147], "your": [152, 154]}})